import websocket, json, datetime, requests, re, os
from datetime import datetime
import time, requests, random
from requests.exceptions import Timeout
import threading
xz = 1
status = 'tidur'
nama = 'xyx'
judul = 'xyz'
coin = 'xyy'
timeh = datetime.today()
response3 = '{"div":"hai"}'
createdl = datetime.today()
z = 0
tit = 1
namal = 'xyz'
judull = 'xwx'
tiruu = []
listlagu=["lagu","lagu","lagu","lagu"]
mjid = ['212643908','212971613','213657456',]
iduser=['','aku.manisss',]
nurut = "off"
courid = 0
lagucountr=0
timerr = 0
taplove = 0
spam = 0
waktu = 0
aktif = 'off'
spamn = 'false'
nub = 'false'
tiru = 'false'
tirun = 0
timehl2 = datetime.today()
botauthtoken2 = '57c4d364a1c166157dfb49e93e78a3c66cfc55e5'
tokens = botauthtoken2

token = (
'809244a0e8e8726a4807b4cd5be902da282b86f2',
'92a54409ca855ad5c5d09e9acad7ae0933a05e5e',
'2b03c21188fe32a073d5f78d987dc831642fd3b9',
'99ee730972aa27d700a02a7371859d825b1ba5cd',
'9a3d2de40a417e0427ecb3cf99b196d94740b73e',
'f1e47d70e1e1a19b4e76d523c961acb00ca14fef',
'8a06032ce46ead6ea5e0e2bbe9d05eab2e14f8ba',
'197218114afcddbdfee9e74d8f840db26a1c6686',
'87254ab96906d1952d2ac68e8af295911409bf5a',
'4c6dd08e545e0d9cf533427fcd82023d304b4782',
'2a198d65d9231b4d5c404920d9df2d0c05da2192',
'61cf4579b62e0877645e775260b4abb3ab70e58b',
'5d9103f1a36d9339beefaa67b3d4ac6ff4b3d773',
'cf178df0a820d814964565149888f81c9927b00d',
'31bcd3fe177fc3e70da2a9f1b819233fbc10bda7',
'55d5fb0ede1497a716078a11f13afc89070ef54d',
'b969ca0e95c02683f5d21449c46e4f26f7cd0e3f',
'3625cfae691306dc1d07024715a770d3255a9afc',
'ea68abd4c65d9faf869ba0b6a712a64d33f57900',
'accf30c37a09149a1ae6fbe06956601683ddce4f',
'398f8e019eb6b9b6374b98ef3cc5708204fdfdc0',
'4c56ba55a8deb8d6d6dad4212486e2c6f5261f6c',
'769d0153ae5cefd6c4d90dac11b9309e37762db3',
'b230cc199cceb4745698ad05cea63c7d6901ee9c',
'0eed7cda683e33a3c9b8718732ac75b9cd81be1d',
'7a19b7dbf50fd59319233a1c426e507a9a285d50',
'4460e7c5710add0875250e2d268a1f2dde48aa93',
'd2e17a96157ec3155d9181f6ead20e493c67df6c',
'c3908d0bfa3ba8aad0565943df8297db90429e34',
'f9663ae3d30ae6212a86167b0893ea7f3616947b',
'cd825931b9be49ac64b5eb40ded5196ebcda547f',
'd42944041dbb2b19d2cb29c86ccecbc2f9f76fc4',
'a7244924da798fe3d62286e36cc46d0474bfe484',
'68a17cb58ec5ccd4e85ff0c922239ca7919b00cb',
'3dc0e017fa3d16dd5d22fd8ec2c3dc06aad71107',
'b55535a1692a769d21d0c0a1d25a403bd618ec3a',
'49ef6210ff5d140356d9246eead19dd31ba02285',
'cdb4cfaceefe886325f6db21db196e12c7ab5b0f',
'a8ba2ecfbd2f998723d1f9966678f6b72f3afb12',
'7651ded602ac452c94da83c70e81b5ccfbafa1b3',
'5fa4b710c356ee51a0899a1efff8008a140b6e83',
'7696d0a0419f5abb17b4fc6ae056f89718e523b6',
'abf3cab27c97f656853dee5d36fe21ad62b7da35',
'9c440cd73203b16630a154edf43f502bc1d085e3',
'f0ac373cbfdf28dc1b8f1dc0a2c38560be9ed12b',
'a5048548701e4625c70d7e5247b69bc9176740d8',
'517be8a924a350648c20a3ad2f05b04e9b284145',
'a02c9f0eea9c4f0ec0923a3c941dab809c30aef5',
'fa11a57c7b749e9185127b62f818787e9326a497',
'5bc8015aa1ce8b88767c0a296d9441e31c1d30da',
'a01fd2b255e9e50fd6cb9b5f938f82a1ad13f905',
'a94b13c143335570b9e7c2dfa3e5aa8c61d807aa',
'eefc9e8ad81de6ae3d6f5a2b76c07267911f8004',
'1ab58a6fe8f87162f8f06d5a1e018add23f2cc6f',
'c210ba1966d69783e63c241f9d9379434b905a8c',
'235b6a43f682ded99420c6ed104f1a98d9439299',
'98bf7fff8ac02cd7e455dff9aa00dbc74ccea8d4',
'9ad3d267e3edad85f8eecbe6a8932a7f6f7e0843',
'55f3cacca4b17a2279f820d9e6f331967e8e4210',
'b1351d4bc0ee62a2ed70519c4d64bd988f7b8cb8',
'c5c5dd901e8ba63c2d21f6899deca2f1e7b7055d',
'8b7d2330b51e7fcc9595dc8f50d4ed9acb6c3d88',
'42ba7a3dfe6bbbc9bc7a79b386700c8060eecf00',
'3b46c75d8e2a578e9da77b3d1aa7734d364aa797',
'8a62230e73af0ecbe356e87c2e7d927b6a0915e3',
'f883d226256188c969a75cc790e346d33bd21235',
'0fee602bd3f9885bcde5a21a63d938d36a521a09',
'271b55bff6ff644105d785a05e65c17a8b3786ba',
'9ffafcb2c22304e655dd52fc51bb2dee4e0ceac5',
'bd97d79138e4949cff3050d12e77f67ebf8e1114',
'a312bdbb239c35ba33efd11fda6be0a3dbdaf64b',
'b1e62d9c550fa9189017b3f70b2de1b23e0565a1',
'de1553eaafca4bca2143e05606e3ba7d0588263f',
'3f326d480a055e14deb15da4f2a1ed83f3188b27',
'867b84468b3b808c4522187529223768d00fccf6',
'844680135b15e6f1b0c3f0f5752d4cd1ff47f5ac',
'7a0ed8171221b5935aaf1dff2762710b71d4f597',
'5d4648a7d654a685b06ed9139b147b17755d1a13',
'ae408effdf14990ca178e4ddd081331fedc02e1a',
'4f97c710ff582e3341efc13dd56da6adef7cb4aa',
'b0c08857041d2c67feb575d0431142f9259764b4',
'2b5e8c242cf40b9094fd56d067c128a9f9411ff2',
'ef07ae915f225d3a8a636bf5d9ff2741a4ea86b1',
'4ef0baa7de70c14b2179cdcdbebd7eb476b48b64',
'c0ab0bc36daeadb6857996d43a53473c8594cb91',
'bd1bc02d1e251b7811bfe210c2ef5cc47e7e6ff9',
'a940078eb5a46ddf07126a920df81f2547516f25',
'39a7594223834b212080409c9634075a532daf7a',
'c99b1fc12ab6529f85b0c666e7e2146db0dba508',
'e1e3263d74b6796f02c47a01fbc6079674d18c4e',
'89416df3e3aade2c15fd323e328e5c5c749d8156',
'12f5c8a36c72a7241e5ca7ed408f1a59c6aad3cf',
'660cc4c705c52fa24b4bfcb510a238ba46bff000',
'5a122b65720b2d2e7f3616a941dbb61487b26fe4',
'2f0a16d3de145bf7c3c3249e8c80214211ac0f5f',
'2dd230d38abb4e9fa1d07fb7e44af38ee3d7ac65',
'6699906e0d8476995802588e9965301497b8d990',
'66316b83920697b58660cef656b3ee22a7188ade',
'5d619af8a4175cbfc183bf32183832b070bf503f',
'bcdde79c7e54d518b5a5a56a09c98ecb48321c63',
'1100f723c82f24b84dffbc415480b1692b1e063e',
'e1e847ca385d90ce058031baeb87065cef1aa7bf',
'10dd927a9ab8271e4c0d6c47d3d4d8a99da7c913',
'57c4d364a1c166157dfb49e93e78a3c66cfc55e5',
'a502203a94caaa4f2a5081ab4e1bb08c387d4ec5', 
'f5ad4719b1862d9c2ff01b53daf52df7eb28ea5c', 
'98365f54b00cb7122dbd8a9f91e24a8f8668d31c', 
'342feef0c1328a3293a7820475668e969c215bce', 
'f444fc84837b88fbb2177965efdaf95da2773e70', 
'a1382886433bee0373345d4ced7badddcefd17c9', 
'23d489e342f1d2cff4b8653ef9c3706bc0c353b0', 
'e469cd3899e4144cd0126025beeb93eb0bf680c9', 
'ce4b832a4fe1c21849cd0aea2faa589dc5579cf2', 
'af449614bbec955d56c04da09b874f2a0ae744ae', 
'f6989928c254d6618cf6a30ff1cca2ad905e9032', 
'4bcca89a38d20459d54ca01d09fe2ee92950c1de', 
'4b9a74e63910df9fd3a5dc25c4da1a941db80e00', 
'3b81e510df5624f7fae3aee5deb5f5838da4143f', 
'a8602e9f2501fa6cace65ea5e812abb8543eee41', 
'914d08cf994662467c06f4adac6983f8e3180629', 
'74bc439ad400f1225b11d81b98c7dc2a27359028', 
'c5c273689019aed94c3231f19215aae2e9e776a8', 
'b81801fcca2d8ad6044ee0663df26397ee6ac18d', 
'5aef06d1abf6cec3e64298d9f076f67825d14766', 
'441048a3dea0197b68f556d6ed51a7b7b4f4ab4c', 
'c3bdb465fbce801aa2188bba5ce9a8fff4261d8a', 
'd51518ab626ab2e814ff09af56c0b8daffcd3479', 
'485c557f304c8b9ea679b69d571471ae556010a5', 
'a9964f46a895814b7c68a21a72cda2c95afcd25b', 
'e83c6de3028a5de4739f8f4ff46f81f00b099f85', 
'050f68c0aa05969df696343863b1a830ba93fe13', 
'32b1df29f3dca55a4a1279dabdf13d50495ff0c3', 
'4bc4a9ce4c45a7f90c0f7569a4789f64e79feae5', 
'c4690561f4cf41c9ccef0a84fed46ee7c9a74881', 
'5e133dc8cef87735aefc4b01e7d61e59f1f5a50e', 
'60f4e27ad4531309fa6af7c3ec1e4b9a5e961654', 
'1692d56a8bc5824b3b4bca11454968b965ddaee0', 
'b82d922413d38135fafc080bdbfd909f2653c8aa', 
'e36484f6f5e820e5a6b2f3716d72b12d7c3dc29d', 
'85bfafdb4ebfdc356c74b472ea157bbad9ad9469', 
'583ed82761c6b81569400bbb806c8e9d4e57f004', 
'f45d5f994e0f48b49b5502de67af02d4f74b7259', 
'2f9f5a60b5ed7af724339718324cb50a73f6812d', 
'd320151ecc7c353faf1b2ed1fd8a36a919079e5e', 
'ddfa17e621cc5a7be2d75ea5d241caebe01496c9', 
'0c53d0188d177baeef94e864a5c50d5964a4bde9', 
'303f0687304289a22fd0fce7993970fca016dc44', 
'3110227c678df0086b2960f700b08fdc8cdff692', 
'b485472cadadf03d8056fc4bfa01cc0096bb5de4', 
'79c7dc308859673f44dac33b659856d296135a8f', 
'503914e6e45eb83605240f4471097c716ed56ca6', 
'cc8b3bd679007497f92de84e6d080c0d4f8078e9', 
'bbdf7f974902caaf84b1a17edded76a7d82133f7', 
'7caa01454745c8e193cb781b842e9a973fd6ab73', 
'60af24a41a99ad61d10401af35ae5bb22b66db59', 
'c65ccfe06f61c4dad6b4bd46affd17cf1efc2306', 
'fdc874afc7e8c57f4c327b68976a398c4528bc01', 
'6a06647a142430d4bc05f2bd8a6dfbe30bef5528', 
'c79600417a1df9d3aeac4a413b5a5404e0d5d792', 
'550403063ef01a6073e4ecfdb871feded37410b2', 
'740a956fa91f746fa42700237f4ab0c41596e95e', 
'cedc00ddba1f5341bcd7c9588b05c536cac41df6', 
'01dcb32dd814dcd1c4436728ee9362cdc05bd2bd', 
'659f4f3c7a9b7d394c4ce3eba9c3e168388669d2', 
'43f28d480668171d0332e87ef803553580340eed', 
'043231a0e7ca4efc703a5a34d94c1cd4cd0100c3', 
'31605a1856103f4e596123e5be38381d3312ca2b', 
'14c8a2bac11bcc99353b32bb5b8e659cacf7936b', 
'd0d4f3ff8522b458c9ade652de03631d09434760', 
'3ffd40cc16fff12718f2dc5e9de2623b8862cc02', 
'c742716c63247ac44b9741a89305706675c249ce', 
'584d82a766707997d2ddafec81c279aa829298ed', 
'c06031b322189554b554728ef114e9a994e9fcf2', 
'60884f274a7c3dbe776f5466b4923e2fcea1819e', 
'b763a145c02d672de1c63bcc03699fc00a0bcad8', 
'8cba2436ddca1a53aee332a1213e90dfdd1b9bc4', 
'b673f6d7b74db43ba873c91f803a3d8018496403', 
'7ca157bce1ddd6777be7b5377f6b7f6a87d822cd', 
'1f39226fbbc9004452ec828e6109b62f878d3214', 
'06d8ebbd1deba84d2ec999c54ff41bd7ccf331b7', 
'38b3d14401cac0c889ec0253e610c5080c032508', 
'0a58a9cf74990cb6a6b36e2f254ebf7ff2321cdd', 
'881b6a546a90464ef4e9fa45e60614c1a0926564', 
'a94b13c143335570b9e7c2dfa3e5aa8c61d807aa', 
'ce7c9a02baaace428dd3dbf37d3c13570b10f636', 
'35e803edd263e4aab29b260dba27c0d6c7fbe9ce', 
'310d117daf03dfb57fd347d2769db7ed3bcea79f', 
'e695f2a1a88a1e415b0a69b209ca4a538cf18df5', 
'205aea8a7233425c029276abe6224e4df7170e85', 
'01a3da48645562b0a1e2e0d50ac5ad7986f6f804', 
'ba6290507f2d01197cd23c9335424159e7caec67', 
'7c1f3082db36dda7f1c4194c7b8794006f939cf8', 
'c9fb296a62a3dfb00e2d27becebef95a7822ebe4', 
'be21b9fa029107d6131296b9198ad7195b33ffc4', 
'953539ae7e63f1727092982540902cabb8cedd46', 
'4946a492fec793132de02298c5877c4046831c48', 
'0985828b3f66ad9d008151699331e7d4b7dec151', 
'e64bac7fb45eedd1aa826cc4b0838639107fd56a', 
'8a00d32178fd553153f6d7a767a239fbca1886cf', 
'9246c55a551d67c2462108141f0e5bac4991a517', 
'6fcd13983a0142ae804573e34b00904550f574e3', 
'2d34a278494f58a5ebb3e67e5a3e12db43b5034b', 
'c0ecb8b04d88d5eb49b2373bc16c923ced29c524', 
'0eadf1894c07a97244f7ccf84cec1b132cba976c', 
'32a0eed4f28e961715feae1ce208c0d07f46c735', 
'0ee869c0712c42ad6c8662c17aaecd19fcdf8dd1', 
'b7c77a59171502e39c4bf386246384372d47043c', 
'a97b4fedec07580b1b3a9c1f9cc00e2e4b7ce4e8', 
'cb92f75c76602dae7478fa7519022512deaae9d4', 
'440b33dad96b0e7f1be7054076f2cb5179032686', 
'7fdee01317e66764629b44627674074cd578d242', 
'69e42c08f4995d9ccb539f8ec4bcbcb0da719e3b', 
'6057322086bbcac056b1220abe2cba40c56aa611', 
'35e09792313363e7da3e0a0d64c987ab81fc43c5', 
'6aad3d237c2bb89d2421945afec76ebd1e45f951', 
'fb259d300a1e0b4f414d78d571b3a4dfa8a7f1f5', 
'c0e830cd6db1d67f83d62a54a675598af3d45591', 
'667ea1931450552c34bcf40f9e5c3085bafab416', 
'8921300150827e6b58aebb786e0d0f7fa1225f0e', 
'ca353f6ca3b9b4f1a5b12f4e875e61478682fca9', 
'44eb50e19d565eff8cc9490a54269bfe2b2e35f5', 
'1748ea2ed743bb30dabd3ad781ac43aa675c0070', 
'3a23ba9f94eda441a41022923ae758f108b5b0cb', 
'bfc497beafb62e5daa6f46e3fbbeec9b9a1932b1', 
'23008ab0165eca0e22ac3edf2ef99f6c4c1673fe', 
'234ff63cdc5db19a4d8c7ebc4fc1814918c2fe94', 
'1a620e8563dc1c7b05d3d92a1b41daefb16a721b', 
'0ca359d8f14fcec9a9fc1f6d9e5334706e260438', 
'5b1665a5166c3e8151cb359be5b9e5f52d1c33ff', 
'd2cad024e4efae0d62d3243c132044bb57efe38f', 
'8a10ad00ac70cea5c403725c6376ab61e1c263da', 
'4be632cefd894ef37a93605383389d1693648e76', 
'ea6fce6d0d9d47573123d44ab2726b2bb661dccc', 
'e0a73368d1cfe253f5112c42518a197706d879f2', 
'a273d745616c65b33cbd48e2f40fbe9fa51a0193', 
'faf5e91f391565d0a96c5f8399ae04a97c7a2d90', 
'35504899a6a87d63de8410a416e9d6288c9ead60', 
'bfd7e29e08b8ca6628f0db6a90ecef5d8ccf3121', 
'339025ba95a7c75cd1a46015a891e4d939be041b', 
'1d5e3136981b32ecb2949d84a0f930a92a9f8891', 
'dcde4de30c7899321308defda0a70fe7d922921d', 
'1868c239787d73e3d2740899a45ce6f5a1450bf9', 
'582265366196ef856292ce52caa4403e53f1fa35', 
'f1455b00d12b5419a9b580fcfd028cce998056e4', 
'a0683f0f3fc91ebacb08c993b440392b2d225689', 
'9899ac8c90cf0e5bc9b3bb327160e438a6b6214f', 
'ee0db639f8b3e74ddea3e45c1bfa3bf7bfcaed24', 
'8898066bd789638d4bdfc5e3cbdb4bbaa0972104', 
'68e6f10a7ac0ce82e25007b3118a224ef6e4b4a1', 
'7c279d694095c68035f7f365f284d73923bade0e', 
'f50009bfc0ad907f6eda4aa52d96f737caf53be5', 
'fb9b218b2b72ff05f5bebad334a7f80b5cdfafa4', 
'752cba16e82b5a97822b81f72e3fc2b33fd9b99f', 
'b674226dfae89b236add16b2c7df259df380ccc7', 
'd467cc6b0bff0054b63b165b24f8af3d0af9602f', 
'dc9c9d6c9ed226e02b84115618ab99512bdc77ca', 
'90c5cc0880c7dd04a20c6a5e2a197f3a01a99d74', 
'1099c25fa3b5d607ea1c18165f4b64a72322c440', 
'840b720f7c3f3a0e41d04cf2b700bb891805c91d', 
'4c31294dc67b5d0669ce1df42fc01362b1b371ab', 
'a3297d55064ae46ed06892133c342e91df724cb5', 
'ee64427066f50170293ea1102fd37b4d035282fb', 
'1845ef553445aafe2fcee7bac5005b84044b9db7', 
'56cc8c8f42e17523d1baf6efb400b8e9d5e1a1c4', 
'4fe8d359aae539007b08888a47dd22e92aa46780', 
'4ce1e3cdcfd21ec5ca57148d1ccb3e90c7d51e54', 
'8aba4c81ad709b20944c4ee2363d13a7bd9dcebc', 
'7d55a161732b472aeb054807b091783654386009', 
'3e6065a767e9e8aa5d0b560fe5d6a4b8f3e3b7bb', 
'6d1a8a2fd2d154dc1eb97e61ba356635b8c4aac7', 
'3570107f623c545f6053acbc1479538f9518d652', 
'cf3231fb3dc2e1bfee17f0a48b333f99889692c6', 
'b9bd71ae4b6714cc9cfa2edd1ebf21077a9efc16', 
'2632f430e3313782b2174d61aae30c3b01e64d2a', 
'8fe2d160c20bc3b782f84952e43ad9cc251dea87', 
'f2631bbdd75355ca9872ddad1119a2fc9738050a', 
'f96916bcc4d2b5b3d2ddf282f763a4908aa11cac', 
'1faf226217de0f5dd95dea38c951f46715167338', 
'122d0ea725c3456ac5f85ab6aa1db557402efb9c', 
'8177a12cc3e33b11d2d6ef8b1d4ddc01774feadc', 
'd3e4ec4b6befc2f02a418d00625823428ab56a7d', 
'bf144533c3a8029740fc05925e915c7c17378e2f', 
'2e8e6df7fa561e6d980afda686884e8fc131e30e', 
'8d2f2ab0dedd3ecf0b3029f3091f44dbf805536b', 
'ccad82f64aceb0a9ee3e7c10d4cac91c16d2a783', 
'4f1bc5d2d1981ef851d01697e64f10bec856eb78', 
'76e6cb6dcb37d353446c7af2c6afeef166955c30', 
'b7aa28549b64e4fb7f2ef0a8223aa2d229bcad21', 
'b2165143dd64c89447994589e175638566ea13c6', 
'517c3670342cf1934f6b9aac3e2be9e03274ad26', 
'ee582caf9185dbaa6ff9949cf1623dcaf5747730', 
'519cf393e74951f0abff577c4bc46997e22e0379', 
'bdd49d8ca85511dfac337872d6ea8c927d7aaadf', 
'c1783b498c3dedfe5a2a504edd84dc3ba9c76166', 
'79d4b1236d38433a8e3fefaf3830eb50a84616de', 
'7fe2779a34271366f692d214d312ff6989622eca', 
'f86bc2aa3c3a925941b8d5580e477e18e08a91e0', 
'888045ddd9f385ce4e97704ac1d54aa4695a6c15', 
'39ba6f6957a80495ac80e638d7fb69be246b7afb', 
'46b67351e331fe86331ab097d794cb1589a4a830', 
'8b346293305e25699daebf95d14543600cfcbe05', 
'f6fdf91cff0c63b909c45a0b3519c54f5fe3eb65', 
'3b82a11a4f018e885ac3665e335ac920ef3368c4', 
'a28494e7770f062d8f641d8e3c13ecd68a43ade1', 
'bd8aefe8ac2c917d9a9c8698c866207880d9f43b', 
'46ec82c62839dbb6b94f70e6203ded5f1ed0bb98', 
'c75241a40740e52ea3553f75a6cc0e011b4abff5', 
'062b4c69f75a7f0adcb14b19a19b2a792df8cb50', 
'46c3e434d237d951366b2f2c7cf078196e0483e1', 
'3e5c9429419fad8ff69b4dd823b808373986482b', 
'1e61676955716ed566f83e84e1df137ec93d421a', 
'0057504cf1cf33ea19d96e4692088b0c3f08ec4d', 
'd6b098a1afa313a33e1fc3c2d592ff1888006971', 
'3fde52e0a35193b82c09eea8178b7804a1d664b5', 
'89d83c68ba3ae9607c471acb416d43ff24fc49f3', 
'5d7a35ae391caa124085aed670c49b3c3019c680', 
'9912decdd8a6b7664f4268b520b21817e137bac2', 
'abe5e994658533204ee9150957be2ef2e6fd7b7a', 
'ce5c43e71af39a1d73ccdd82b1fa89b6feb65454', 
'91470f2058a808208dd6e315d033d342f19ae9b5', 
'c8105d614236081acffb42b16d565bde20102443', 
'0eaa409eba6759c9303741b32638d509a97311e2', 
'de5986cedadfe8729a681dc7100e1a75b58ca01c', 
'23a904d9bca954182dcf914f04e46558ad5049b0', 
'edfc5caad7c71462b5c1eabf9902d9f0357c215c', 
'cfed59b22abe83ba10d48728a6502c4f4351cb1f', 
'5059793126c598d4ba03609c9ca6bcbf786c3225', 
'2c484d64724606e06ef4c4f6ea25a246cf97181f', 
'2e0e3946e18208c314095dbba8ba717eed9dce16', 
'6ae5e7e0d6ffa630b85751f1cdf193b562c46201', 
'86f36e6f7044c3986e402867b18b15db7ad3302e', 
'aa61d1752f6129d277a46290fc72d7bb20a3534f', 
'3a29512a5973772647b1f7fcf0e0117b34759d23', 
'860bf3846a5fa4dd02b1d604f7c5eeb3b7174b68', 
'36368d6eaf8e1cb297ca36b3ef21e6e009081868', 
'552e20047a3ca87d1e108576bec074f89d2eebc0', 
'7072b9aee82736c0dfa75707407d47d9adb13022', 
'5fa1a410f6117132fc8888e03a642b130d7038c6', 
'332eb755fb455060abdae8d8624e1ea9063f95f4', 
'3a8b083f48a533d653eace1094d01639f25fdafb', 
'12e3ec9c0789d41afe6aab59eb166d79bd60371e', 
'b37ea4e14e819a699494f28b2a3ca986c6d24a81', 
'fe4219960d2855663601c59b87198cef475d76cb', 
'423b92a2c6102ed92acdac2b854dd1f1010d2457', 
'7ab19aee7fcea47fea313f27cd9c4c847e39d1cb', 
'09fd0fae27160e34eb475cfe97daa82adbf2e73a', 
'2d7a424abac44053c48297ec467dfe5d10c76e7c', 
'4972f0785012b536fc0ef520e410444af1026fad', 
'd4a5e28158e446108ef3e25480ea433bfde1bf66', 
'5641780701f17b9d2ac81b1237636373e045e008', 
'e3ef6ae25415817065427a42b637d3d79ada8e41', 
'29017521e27da9b4bcda91a29528b2c0cbc31dbc', 
'57b52fdda2574745c09b84f5ff92f121313bbb7e', 
'5de52dba591a18af9e88964a216dc6c4f00f3814', 
'e3b27ae637b530126c3da30f59fd4d9c19dabe07', 
'ff8727cf1a2be016ee210d55c096246dac52528c', 
'124a200f574cc13e80d6125216429ac411a443c8', 
'f98b62594842f3f5e87a430ac79887b42646b7e8', 
'cdafce1844a8848fb1eda3993b2e254faf747821', 
'48d5345c90bc1a546d83e57beb0be1aa02d8a072', 
'75721ea472cb941953ff853914c4a0db5a937c2a', 
'08efa2ee29a96972627253dc2986ab440745c608', 
'12a979c48972415d0f122ec820b8187e67688b99', 
'8d42611afae2c86ccb7ed30520320dcb3d8f3c79', 
'2587244fa0f2a258a620c32d736f0b9cfa974881', 
'f872407eeb6b56b0fab9581e1216521e43e3dabc', 
'9f051fbb26cea8c7d7b3b840e58a49aee27a5ab6', 
'65dbf70ca6ff66aebe40c11c4ebced4195ba947e', 
'0e4a93b0cdc36e894b67735cc45ca88bd1e058f4', 
'f7394ec3fbb2af2fdaef3633e7b030cdb47e6ce1', 
'cc78631f4ce17f0aa805a01774c9bdbb10f5f373', 
'886b5cdc1baea8525598d5032acd6fcb57944025', 
'dc4b1a98bff5a2a8cfe22ca8438350a2db6a9abd', 
'fb1aca04a26cc3facb0c4d33b9e12b77265d9c3a', 
'4b8837570872b6582f0792126cfb11182283ad08', 
'81a99e2631b368b75639e7fc8fbe34836affc34a', 
'60c705572e104dc9b3043c21a511dc574fef0173', 
'bc659f060272f05ff6a1e3580662800f05888e0a', 
'8fc4db24ebb3ec940a9062ac1c86bbcfacb9305e', 
'de1086cd233da1568eb5c4f4a640a5ece1fe1447', 
'951408e6e4dfd7926f0f1972a61b600ed0090795', 
'f6baa68dbce42629571d0f6f398f0502657849eb', 
'c32ff9b0f5123fe5fab2f891a78e59f9ac44c618', 
'27e8c2b2c1709f7813e6f1c5784c2b20bd44a9ef', 
'fa8f79dda57556ec1a57d71ce64c99684270cbed', 
'a8b52a929cdf5a2edc0bf043fb1706df2535890f', 
'5a6262049b9b2dd3821ec60fc4a8cbab6a01fa8f', 
'ed8e8a0c4d1e1c8acf7a31c808836542e9effbf9', 
'0a718d11411a0b8efcc2b27df6632f457cf58ec4', 
'0c63c44a13e909912a35c3072881916b3985d595', 
'e77724bcd24a3550a77ad9b1abf6e39b7d71818a', 
'c5ec4b36f216611f87e404f687a55d22bbc74077', 
'755e1d111e147ba62ee174c41209b2ea5e190fa2', 
'57acb40639a224595533a96465e710cb72ac5204', 
'335cba7b161af69423e809bf1e6ee70ba9c6513a', 
'6bd2a9ea129fffac24d87c7b09cd2fd386ef7284', 
'719b4f5f23a44c47df58ea85715c2742a30fa79d', 
'0daf82c0ee85d4dcede11748e07fb4fe00a5731e', 
'0958bdf41c60a8517441a7781dd3683fabd1e569', 
'bca6b642b18fc777d450714cdc37c6a8e63e7a5b', 
'5dbd83c9730302acd287ad8061635cbff40f7b9e', 
'769142c01bdb8e2e21cfa8a837428dcd24eba0e1', 
'9ad87b8b98b3cfff0fe6e0ebcb29dc0b6b2f90b7', 
'81bf7ffc3a273f0424412971f8b2b0cdec43c6b8', 
'f6a52af6f5af3f081aa7ee121eb0db721830a587', 
'a59dd850a75bf735adc079d6aeb468cfbd8cc2f1', 
'e6104239e8d53d133f9b79b3536234b5d577187b', 
'8c65e50923c60c3df05ef048256d27b0d20f3c12', 
'7fb03337e72dc351209c69fd88d4eb8b8513c0b1', 
'83ec91d286d5a9aa961864905fa04249d13d494b', 
'0d0038c514400df8f54222f1b1d237e53301d444', 
'75b67e43e118f7c057123c559a1e368bbadb7a8d', 
'58f84f929e99588c4f02a9694312dd3583ea3613', 
'0bfa137351b28022389c4444f3f708397c296c42', 
'4a30ad6f53e001d187f28de2eee759d2178f192a', 
'44ed4caa06fd61034d4658ceac42d8912c16025f', 
'd949b5edf798555287aa77952552c23a65a5381c', 
'fa28ee60cce0a4a40fe3a42aa17c66d739b0707f', 
'cc41b640e6ac201372d1e5b194b986a1582152fd', 
'bfb18e217e0fb0baf4a626789f6b29b281109344', 
'4b191d9d6473adf75a9e623deeaa77606e326b46', 
'e27f1deb00f425aaac8e16f5e1a47a78a7c2fcc2', 
'fac07468c8e5450cd5004b7084c23541af605f3e', 
'a6f4461268e27e1e416f2aa6dcf9d2ef8021d88b', 
'46ef1b600c6f5d752d4fa697fef53370f212a9a9', 
'4557ac3acf641f33e90ab2b0a121be5ead09cb8c', 
'e21ef74d0ff3297a3d16025d517f48c32d634095', 
'fd85743a5f812e262645d10a7a3fab267c07f743', 
'd2a5313d0447d93120d9484d17f797d7f4d8001a', 
'70e2947c0e88d7edee6ecfe1a566af0008efd51e', 
'1a5343a86d1d34d836d978c0b3203d957460d146', 
'122d11e986c10dbe82feccc350cfe8e5088d3226', 
'9a70f0d6d558d49297a8bb7947bd3a31d09b98d7', 
'5177b525b7bc2abf28089ce210c1ef5926ed6c38', 
'691e2a7d3b5e11e8088b2c36c4377d62f72e7233', 
'bcda9dca7fa62ac90e0a3627d3d4c7921e0365fc', 
'763e0b66e605c914953aa213e6872655feefceb7', 
'fb8b9e11cddbadab0ef849c09b6b0e874db3edb1', 
'd202ce07b2c0a8c0802496c5f91e88208a3a1c8e', 
'77122c624870e3e08320225dd4afa894f0c41bcf', 
'80a7b985c70a8214cafe0dc7d6c9fe6ed23abd16', 
'6b4419db864b487abb8ac40ec3ea8041595dc26f', 
'0cd320071d8d512343007ddd0a21f10d02a9b0c2', 
'45d1672c4fd4af1d270cd46ab97ed023a625154a', 
'5806ce946e542b1c232313e83726acf07e3c761a', 
'1d9232f06669a00399be706459b0c01294917f2b', 
'3bf89d2e811a1f696add33a4e92cf53b7005ee31', 
'e16cf8132bc866fda6d5ffae524a500de110ad5d', 
'3b5956717962443bff63f71348695540194b4441', 
'9f4a9fc33c1b24f1da3cf1933e5507028bf5954d', 
'f5d52b254bfe1952e655817af948a4836097d61d', 
'e3b0b17536cd6eabad5124175f31ce4381cf400d', 
'ed3bf68f2d6b4f17833e143478e90b967aa658b8', 
'dbda5cb740c46463f043735ca9509fbaf68d989b', 
'cf64ac36f2f7872144389593c81078c324277d5c', 
'55184b9b4237b2a70d14c50a145e0ec1161db450', 
'2bafaa57e0e1cc01634a5bf76e777544a00e915e', 
'3c9e4afc407cffcc3e19c3533ff43153ba5576a2', 
'ec189cf8b6334c81f33a6c34aa16f181f2df7712', 
'd3e8f95f3503c3c45072665f25113360c2361225', 
'6a8571215d74366f945f1356b4b5f14d89c05e3c', 
'b83132f5789c54d6d61de0161a5b2aa3a724fc57', 
'f3d862ef17ca293932779a8cf1f4ade04723648c', 
'd751841b3c4b926ea233fa574c6132f16257c4b9', 
'79eeb0411f8d7d97d015e1336bec1397193ee697', 
'3f9775e75c2ca1ccb52daaede23a9e16e95f925b', 
'7bcdbd4af379600142eb27c3fe0b41296e7be743', 
'4f5e3e7d90c4b0611174e6003c12cdb6e3fe170b', 
'a59f338a47e9ded1d7313fff508670b6bb286d0d', 
'957daffc2527596dfb1aa0d792ef718612a3b5a6', 
'0bd9d6aeeb57b8c76ad1a15708a0200887ad0193', 
'6d31c663fa4615972b1b5db59733369f7ddd435f', 
'b7dbd74d4fceed8da004e61d7e2a74943e40cb75', 
'552bf6a3c6f1af7ed0397e8bad85f1436449cd4a', 
'5357c1e57e4732b44e77b54180fed363abf4a707', 
'20109a427820faf86774fff8338b1fe58cceed4c', 
'039fecbf1baf85cb623e7e257f7077b796b47894', 
'369481405c4437b6d39d7215dd8b0ea94bd35e5e', 
'3085808023a64e3cbea16fd5b1c4f4a6670d2b04', 
'6dc066764ed4f8390221f3874841871e5188ba29', 
'99fcbb9e7cf4f689d5bb7e5577ff19827590a4a3', 
'809f4d96820d7b9bc362c8ca679cfff6d93f7b42', 
'c03555a381f0bdc4fbbb4d01eb50efe0b0c25533', 
'b1887fb7ee045c4ab22f75517b4e60bedd1eaa94', 
'1da4c30ad128a1d5a68c08232fe777f86d94ac31', 
'7c5984e082bc436cebec2dc5f005e9a653bd103a', 
'8f0f5411def00c055a5b867e9e1bc047569e55f4', 
'4bbca709e6b60900d8deb6318aed72c30fdc44a2', 
'0cf7d4e812a4555c02c606a2484089fe4d4fc171', 
'bea997650a447c4cd244a94385f0d677515de16a', 
'0df422ba29d51e3237105237c0efb71294bee2f6', 
'0eaab9a5b467b9ad7a97366107dc91abef5a7471', 
'd263f36dfd9b0297851c5d8f86c4a742232647e9', 
'94acd98a9c6933d13be8fedf2707c313455ac1fd', 
'cd59b03582c22dc1a9691707479a1766866e3027', 
'38cafc03c488e97545dd0e29929eefff1c5796ad', 
'204c8c3c09477da5a855f594214a55245ce2d0dd', 
'78011d12f47ad2d23c1af3d958fca54614ee9a63', 
'35802adb63183bde03feec8285c5d517410bc68e', 
'0a017721137dd58d8484bef379650d415c4cabed', 
'7a09c0d98bc4c1ade744e639b4c56cf4d3337c61', 
'f07ad122a620478fda7a2058198bb662b3e5174f', 
'b91f5e5479c65467bdbc93c117cef98970b2ee2d', 
'29baf1cb0e434c56b4f2813776bd4f0e54a263bd', 
'13269689c301784e0fa2293980342d4b6af119d6', 
'7ef88ccb83e9f26e56ce05f81229e60f6bd8b765', 
'26672d9246296ec8b2da5fea3281a173fbe44a8f', 
'11d55a87c70930cc886267c78cbdc7ebb2aa287b', 
'35db04a2e40dc6e51fbd3c3208fa053938bd0a60', 
'ce6d6ad8b110d903c77800c65a4b692165205b41', 
'5fa6ebf179222ee59e0fdd06f449c80512e436bb', 
'0297f1938aa4b1e903326daa8751af3012c9958e', 
'343076121871366d2eb2b521c4c3b44ce03f6545', 
'0c2b0c94ef7139dbb972e233d357c1a57ad12e57', 
'4bc2a8217deaaf1429cf501316fdd95087135b26', 
'889ac1e96dcbb2104933a1d35ae1cbad618371db', 
'851ebf1fd53d7d652942941fcf9f687815b43891', 
'e489bcfaaea4301ec7930d841dc5d957c1872c17', 
'6736a639cc93b85483fa9b2eccfabca08c44a141', 
'98bb1c3013476b5c87a60afc8dc07482ea35efc5', 
'389ba36233d21e61fa46453d05192ec97b23a04c', 
'2f668385f6bcfcb05e0c9253c1bb74c1ab268074', 
'61b1a17205efea207f100a6e1de3d62b32184f50', 
'afd5d0e6be2c5907ea12701e333fa7395cb79308', 
'82af734f4f4c79a1d14dc4888b9f14e4d4feafa3', 
'717fb15e2a355b02f9b8f51d43928fe6daab5d10', 
'ef70f7aa27f5b04e788219ed91478163e36bba9e', 
'7272ddf490caa57bde8b81604d2f6a5c3e1537eb', 
'6edd20d89d2a926c8a468ea63927524f59e11082', 
'1e2143137fa38ab3e1054d5bf6fdaa6ee97af0e3', 
'df7f8eab10c94653ddbf0b17750ed28cc049dac9', 
'2b5ff04909ddacd9fb897e86f1660a58fde475c2', 
'6f848bca7a1506368ddf3ebd7f6869d2a5e77ef8', 
'88b0f4c3293cb9b06ef996daa634667a4748ea2a', 
'5eda9668992d65e5412b370122bb696cdb4f31b8', 
'32cb58c1234f78686c357853a25d1e13b668462d', 
'6cd5c37fd3b26aed2de193e1a34c4c929a917e73', 
'2c8034b57208685517fbe3af161d172278d07d5b', 
'3d32e1aeeb2e0a1f602a9aa1830c2e2b8b43cb1a', 
'7067d700d96c3bce1613602560ebe2829754be57', 
'42761dd562ecef8f858d8004d43439e828f74cdb', 
'cd9b403508980d5e07d7913b55e1dbc94fbee796', 
'1cad798b898d6f24b929add010475a5b7dfba4f0', 
'283f445f4735ec5bcc684a2fca6496989cafc28f', 
'54b2b87cc087e2ad919d6032a146b9c326dac4ef', 
'cee7c53fc9f4885cde6794888ace83b02a3d4788', 
'c240dbd2d21bd6e5ab423e718a2584c84a8b6de5', 
'c6ecaa3cf0cb4b95beb36cc7d8e3419f0076a074', 
'5f725b9c56938d48a2e550434eda4c70b30e8876', 
'ef74728ffd0b1f6a63ebf3c4c96297b50476fd06', 
'1632de7a17e1403a8826df10bdefcdf0b7fe4cac', 
'e9a956337be02b701bdfd851e5b7b335441fb731', 
'ca35962b57fe7153d4c2f3fc73f8a2d0ccc08c10', 
'3095dd551f05e27ced8c8c5ba36e436e2354b8cb', 
'adb1fa89993a4933a99e4605524538231a6df7b0', 
'a5fc7ea967baac2af68cdb0436095c9281babb04', 
'2ff011a6b680e27784bf7551b9cf14dfc9a48240', 
'03618badb8db2578e2975ee4680e4a15f5ac10c1', 
'eb4ce2672e279e4d06cf1a5632b2ff95f74623fd', 
'48e242c9df1689fab1e5531eb923e272a1af38a7', 
'55c60527990b38143d60415d903ca620a49558d7', 
'6a454d3dd725cd0cbc9ab1334f28e1fc57163121', 
'5bc86273ddc6319f07bd1b640101ddf44278b462', 
'74d95d476d1ed4cc4c485992130e7fad0d8ebbcd', 
'21ea56ce12b38271ebbb9f1c030b866d3be57d45', 
'a6c3ef7c547d0c1fa3afff9181c1a8e3196b0816', 
'6851c18aa7a44ea62fc0f043ca47c40935073611', 
'e559d14af6b5a2776133b93ae945ff761b024019', 
'c11046cde6f00b482d21b6b1a018d5390c359831', 
'3992a03bddf05cb14045e9ecd1f6a1e160930680', 
'8e2dcb927f8dcbe74956345260ca1d576b9679ba', 
'0c9930f43ab31bec642a9965da93d724a4da78e7', 
'16b25014af14bc83639301bed52d7dcda3ce1b02', 
'1423ce72581d13daced53d254868e022bd5b995e', 
'ed62c82dd1bd69a0b000e5004aef0d88155ee320', 
'58379d56e54a05226836317654edce2dbbe7d867', 
'82959fb1b0753880aeb37d54bcbd11a641c87818', 
'264b8face66fcc6af7be16475322b5105ccdcc46', 
'9c52583084b51ca2236b640c89eba8f08d5c19ae', 
'7839be616b6eb3251fd5441c35af4e093d9a30d2', 
'14447f7f900c48d02e635eeffd3d1ddf9be297e7', 
'8e8a1897cd73818124c1a36dbf7cc2a9478b5d9e', 
'6a59ba300254b2ebb390fd61274c3247a7780711', 
'fef561cd83f14f6e46711d76ddfd34b9af831c02', 
'9231eea6afaeda7a685f1152f3a1b5c05a7bfd99', 
'53416f37478159ff0018ce9231b706d7706e84ed', 
'0e051361da84bdd74037800e9794a179a249ba94', 
'22c4c74b6f44a08805146d43fd847e5fa1c0830d', 
'80de3256c79ff5110d135b2dba65a6a97167dffa', 
'823aa14736297e1d80ddc8b49a801c667d35a772', 
'97457a2de9548a80c82961fe558e1d5cfd82b5e4', 
'3d9ef2260872d98144fef179f3cf756d31ba1a46', 
'18a7ebefb18f2b87a4a1e4b39715e337d27d95c7', 
'c77d9e0dd5d815baf6983c3bfd77ce041b680768', 
'0e938f350511fe9ca593d364d23f609cb9367eac', 
'b18dc5342f952b90b0f56ae2ca916b6427d4b359', 
'0fa4b96dd26fee4ce6508fa40fca8caf888f1c30', 
'bea3a1d293a39cf71230f934b9be07a9815d29ce', 
'd86c0d5c6724ee27bb6b86f2d06e994db5180d7d', 
'822ef7bfba3507f03e5587ec0f146f37c7b5cb45', 
'606d54d44497ea8ee60d86dd5a22081fbfe1c0f7', 
'2f19d167bca8b744091dc7bbb7533184069b89d1', 
'2e93db2e25b60485265ed3444ab9a1b009c6c942', 
'eb0e8168490c278738f35d2b08b6eac998e129ff', 
'ec9b5430a4044c52983dff0f3deaf39ba443ac9c', 
'a28b4375ad151cc19652b6a544806c50a7d3f124', 
'af0b82479f7072f47628224d804324cddbc21213', 
'68f645f4b3deec5491aa87bcfd7d6489118a23ef', 
'1c0e71450ff321f9ba3993b4d486b9a8faca2702', 
'ead40d21ea001e8e53b39f5ffcf2312bdab90a1f', 
'174a0a11c76529584a234760d9636c71e01691ce', 
'9be38afd91c555df24f5cec34f9b048f5f022096', 
'c802baf29675ab44e28fc2958c155edd6a110432', 
'70cf260b6ac22c7ef81cd16928293d7194c3cf85', 
'54af1db1ba71ff138447277dbff21613393233e5', 
'00763590baa93d62a0d53d3fd85a6310987cda88', 
'14df33b2b1838810978e704909a42fee7a07fbdb', 
'd45cece18613510066672057a3d72fb1b3c241f6', 
'5db2e771a53070ac039c5ce23776130bc1d73b37', 
'315b6d31a9947262e3c732f5bdde393a9f9e8488', 
'c49a7fd75bc98ce3e8bc7afddbcc8fd345f3b655', 
'ab667d45be3b7f017d2af81fc718a9a5d03bfc44', 
'bdfbc537117367adf480e820bb292d21c8612fea', 
'90ec48a6d2dd0b9e5928b43ab87f288c5ce577c3', 
'fec49334df2ab8bcb6f1411e8bc8e055b0ec2215', 
'e57cd331738159db7a904d7814c6125e90d06052', 
'abeab637d0fa36bbd7a7f813c7fa430a51ba438b', 
'e50fdd10501324446596e23594ec1528a126c0fb', 
'6199cbb7828266a2431a2b5dd6b7a008f3e3b30c', 
'8976691695429d6437ddee7429fc136e18482341', 
'53d2b746746a46920b49e37fc68bbcfa90299715', 
'4ed9c018a16cfd74e7f68c09b9413dcba6ecd483', 
'765e44a811fb0ca26870cbea56707e01172607b8', 
'ad5b0878edbeea3988fd4472c0e48b7948a3703c', 
'ba6610a7a33698ae5e8917af011e36d18122879e', 
'79596c1115d60b7f80cb922eb7e674c07896e73b', 
'8bf461a5273c52ebd12b1b653a1c225cc3593af1', 
'89c826d91d4b81b6fd56ac35032229a57fd9ebd7', 
'a9964f46a895814b7c68a21a72cda2c95afcd25b ', 
'e83c6de3028a5de4739f8f4ff46f81f00b099f85 ', 
'050f68c0aa05969df696343863b1a830ba93fe13 ', 
'32b1df29f3dca55a4a1279dabdf13d50495ff0c3 ', 
'4bc4a9ce4c45a7f90c0f7569a4789f64e79feae5 ', 
'd28d266e2d782affe86cdb04300d52a2315bb694 ', 
'46b5ff67a3711b2273fec7fb2f71564674e00714 ', 
'646ea2df28ae22213c15a5d87d7c33c60c5951e3 ', 
'20b57c2b05f1c4533ba2f86457363574f5b8f96d', 
'2675eb4adca9be09fc6d94aaa8fca8b876004b88 ', 
'0aa9989807045ad21ef2576a41ea564aa4757b33 ', 
'76d44c5f056fba47c35492cfc721f9a9e450f546 ', 
'c4690561f4cf41c9ccef0a84fed46ee7c9a74881 ', 
'5e133dc8cef87735aefc4b01e7d61e59f1f5a50e ', 
'60f4e27ad4531309fa6af7c3ec1e4b9a5e961654 ', 
'1692d56a8bc5824b3b4bca11454968b965ddaee0 ', 
'b82d922413d38135fafc080bdbfd909f2653c8aa ', 
'e36484f6f5e820e5a6b2f3716d72b12d7c3dc29d ', 
'85bfafdb4ebfdc356c74b472ea157bbad9ad9469 ', 
'583ed82761c6b81569400bbb806c8e9d4e57f004 ', 
'13fa08ae02118d8f4d123273dccb35b1d782bbbb', 
'928bac27b5ab73e2369c8f6fb2bbd7ee31911bed', 
'12d4466aa4013143095a1aac5f0f0c9a42fbb8e9', 
'8bd3a194cbb45c1e75c456cc629c877a83fbce3a', 
'81890bf1f115f949c7c2ca8fbba18706e00c7627', 
'1261e53c161f2af6ea9ceeaf31778bca8ad69f9c', 
'e7c3682d89231b5d5711c10b49134bd7866e7de2', 
'6f91836a99dea43345bf65e9b49efa99539a7989', 
'b07e6f9afb3348cca4bd7d3da937d124fd5888cd', 
'04f0ffa1775a3358c2a1f44f418d5ff0ffe86814', 
'e22c161d6129538fce3e8a0e6087b60322cd7821', 
'd49f16274e06cfa3099169304d997184a88fba0b', 
'd66edb2dead8bffd69f0319edbd18cca506648cf', 
'87658156c262b7dc7921bc0a0c65228cbb8e0a5a', 
'f179b9e7b67a7b196618a4cff18cb3bb7e2322cb', 
'621ab52e70c3a1a2e79dea1a16f11398ddf1df58', 
'8662d18802c4c562c9a67e5094e2a3f95275172d', 
'2b39d06b0ad6c219ccd832822aa35868a1847389', 
'e4eef4d697218b68e7dbe7cf27f5f95982c9e2b2', 
'1523e7366fbdf6699fc2eaaf782f05550caeb68f', 
'aa6b04f83e4ee5499de5f5da92f98441d8d3b7d5', 
'24eda550aede205c16d7d8d0fa80c9b3c573b3c7', 
'625b4e879760679f16158fa889c71d08526e8915', 
'ebef0b91f95da878f63c977cf1c8eb101a7faf3e', 
'2a6111ed051269409707019f39d724444348c324', 
'118673d7d181a61b98897b1600a6ef3d37226c3e', 
'a59b5eccb397d0d1fa38094b26178359ba0703d8', 
'94697c14ab638217ae7019d840aad3de1861981a', 
'3de14b37c3869d2dd38571419c9214c005bb41d7', 
'32a6d7d62918fd8916a8044ca0a96e6eaf1ebf7b', 
'09355508d3cc73572f8d6b39d079f6d76194517c', 
'd597753c0ed72f62ff27f66599e6d40b0a055b0b', 
'49064fbe825174997ba97b624b91dda5ba4d101e', 
'ff30744f050da9ffe8a3c40b73ce3c74787ecbab', 
'b7adcb3f09b8ec93b8957a06fa5b69f904eeb175', 
'14bd29b9059db2dd1c927cddc63622acfe179cd3', 
'9c42fb5481d53fef446cd34db0872d979eb1bc1a', 
'4ca1b842253cb36f5c67a9dc4eee70a299136830', 
'51f9006f0e4dbe6cf222e93833a6656966eb27a1', 
'6689e1a24c72658e54b0f1f3172ae56cd96917ef', 
'61d1de185876d20061440ad37a20345d845a92e4', 
'4f87157431ca9852603fc9640ea0c0a55150fb60', 
'3fae4fff81721c12416742b06612f3b912d36457', 
'12e0b5c0dac841b9558aa528c65048db26ec9303', 
'd5b85aab3e1a64d73c3f5577dbcbc780510a6074', 
'f8bbd14646b718222df603d2d32f44c5b6589463', 
'354418d462f341d07b32134a606a797fca0757b6', 
'7cc2b93ac89d2cdce747ee07f7ef013c0302ad63', 
'b128abfc21b2eff083e4771ae2f668913402eade', 
'8de506388d56dda6416e8c006e4aaee5834d483d', 
'ed5ce716e61a28b0ba96e0c3c81167da52d948ec', 
'3d17e70ee6b3fb42fc7d226d8148227d041c51af', 
'ca14c699bfdd6c9074fdfc9a94adc15eeb418f2a', 
'd7440459e4807baaaa51751e9603423b390b07d5', 
'6a38456d9e730290dddbc5524d0b000336f15b3d', 
'a68e7ef373cace8019e6a6184bb29fa4f65289a1', 
'aa1615d641242afba1c3742d5bd4d90d0b38eab8', 
'f09b596f512fb9b65de4672e41b1ad6328d754db', 
'9e41c373e5e8272a22105b8428ad8fc1bb97be2e', 
'bd6ddc22358ba3570a4e62f501ee88e656e41be6', 
'95f072178c3b75563cf7856f17b3c54c06858580', 
'0abc62030250c0ad7007ace9668d19aa8c982a6d', 
'27fa303f38b2c912af2afa864892372fd4cd9d12', 
'284c44886dea0aeb68391e88a1b08cefd349c52e', 
'5ac5e085b38787fd4530dbbdb68ca4d19a2bd269', 
'd33e353f677846f4f2fb4ffd2d9c0f5778572953', 
'5bf793aab21f26fb5999cdae01a811ce7f2edce6', 
'acc3a4d5425d3b7aa5f605cb972796d5e9985a21', 
'b4783ede2cce4840bec5285aff18c06fe728902a', 
'8b346293305e25699daebf95d14543600cfcbe0', 
'83a3caed296ba4f0902c3f5cdd3f03bfcc13f024', 
'860859cb2180115882df49471e38623263d621f7', 
'9ba88cc120dd5412443bfe16e5fc02ab7e8997da', 
'a1bac9907dea70f5f265401579f7c72772ecfd5b', 
'4e9764638981e2c13a15e0350371cc31a5e231c4', 
'20d133ffd9c0e119f88376682f2fdc16d9f99c51', 
'8a8ae520aa5b4c44098e822b74c9ba4e8952b69c', 
'37457052368830b70e45840be45992a69fc9ad74', 
'd0c02af90763f2ac0af040816978c76c03d98387', 
'448a292e737afcb23b1585f223c102413a875e61', 
'5f455ff3807a42bf2a6e774e6a962a4873f170be', 
'56527b9eed03d9258664b29deb71f09dfa01f7bb', 
'5e2f08834d8a923f671b8b41bcd6d8b9ac1bdbfa', 
'd28d266e2d782affe86cdb04300d52a2315bb694', 
'46b5ff67a3711b2273fec7fb2f71564674e00714', 
'646ea2df28ae22213c15a5d87d7c33c60c5951e3', 
'2675eb4adca9be09fc6d94aaa8fca8b876004b88', 
'0aa9989807045ad21ef2576a41ea564aa4757b33', 
'76d44c5f056fba47c35492cfc721f9a9e450f546', 
'49d0f34927b43bbd420cca3c9c668fea0ab19a4b', 
'77cf1d1028fdc3c37357a80e354db811417d9c29', 
'4da5d4805f1c8cd161b195123cc58af71fe2517e', 
'c8b63a1dfab13cdff036fa4f43a4d946204b296e', 
'e8f53598c45a0db525962b81f9b0f6b0a096acac', 
'4306d86c9c537e644553e29e54aa672599d1cc1f', 
'f59cf44ae5ee54749142d0fe47e5e6d56c44cde8', 
'7f6c79cd6748b5fd85bfe50cfecb1d749a5f467b', 
'41e1dab967db74f0b09b3bac22682ed69a255088', 
'274722ca69674ba3b02b63019fab69d835225acb', 
'f7200c03d326d45ba270475fe043940bd4445bba', 
'6b53d89a928ea7496f46bb6822385faed16de550', 
'a0da393bc9df94f3e43d77e38c3d32fb97fe3e1f', 
'015fc7b615039a2b8837af33ae1f805e4962f952', 
'00d64cc4244743de6572794aadaed279d422399b', 
'31ee4d2175b9b5de412c7fdd7f70a6d049bf4d0c', 
'43a7c23b4ac768815cf8efa90de6f96e427c4166', 
'e1bd29ca51cb9af9ad97040e360bd159004621ca', 
'4adc56028f3c79c1d5c8ce337706f3c79aac9250', 
'ad4f4652fd55fde71207f5406453f829921db989', 
'00878e4b963a1f58ad152da855e7a02f930f9a89', 
'cf4ccf09ccef8cbf8fb00a754d211ef3ab22769d', 
'0f1be0ea4dad2024f7969104f78895b347bceeeb', 
'69ae1376c8c9755b2f2b404beb29ac07267b3958', 
'a10881d852339a3d6caa7a367b241c2b2b11ca11', 
'493fb477131edc6facabfe9617011d5f91013a20', 
'956045ddb03632f8c3b443b83c9482c32bbc5257', 
'abc9b98b9cacbd913c0bcda1e1a494100aeaed7d', 
'676e505ce2213a2a54d0fe8d5ad558aea30490e5', 
'b9e03e9a971a71ebbfa1400caddc32cc542e832e', 
'e8ecd124deb167b441ad2ccbc65b9ffe488686fc', 
'8242c7cb8ab8a14d5eda41ba969771941293e57f', 
'b299301dcb9b3e81541118365cbf07f906714ed3', 
'b1c454e6ad4fd41972baca94c74e5bf2acffb607', 
'c94f3c380eb02da363b1f7aeb6e9c448d5cdd9bd', 
'6707ee89370fab0398ea79712d46b62049392997', 
'18c6cc93b0986367185db1dad17e2ce31d19ceb3', 
'9fe3ec81eb67f221ebff20dc92f35c985a482658', 
'e634b78563ce90650630af4df0799222dcd4c32d', 
'6f17c58f55c2f301d6e88e5f28aae4fdcf297e49', 
'0374dba9cfd83a546581f5414e234c36e200386d', 
'4488ed861eec1394189d0a3975a681c59a5cf9dd', 
'822c2ce46a589bf69f7269904960a46bdc418c6c', 
'aa227a85635d8d7ac6c7ea8c5c3f8f79f4ad017c', 
'a6209476068ea0ce927ad0150832ac274dc1446d', 
'bab58bdc06ebd1dbc6d0fe4fc6cdf5c2fc330274', 
'37b07a2fb8435674fde9cec3f2ade262317df02f', 
'2d1c56d3cb7412bc4d09141c031dca35b34ef530', 
'7cea10d477bbf780a287fe950b3a499771fb5635', 
'b6c9e8177be2a63c80e7afb1181195b070bcc425', 
'49b56c3121f59baa2c80b2a6a26b7c2846fd7c74', 
'78ee6bc3cd6f8ebf7adc0fc9bbd4bd3d5fa91c39', 
'880efe403f66c585eaa2e959c52a022c8e0b4ce5', 
'b0288b38274392bdcd51b580a7fff3f51160cd83', 
'e3967cc7a83a23e1bb8441d2503596229d87f2a5', 
'2d9839211b0277d76de39b831f113b034bd72d8c', 
'cd56ce4ab44027c417cf60f68a6db7ebd23fefed', 
'8b69691919d3950b65791dfa2d6b6b61770439cd', 
'aef9f40ea5618cf522b26d8594354c33caa74972', 
'9dd8e50f09c63ee6a67e6c4234023bff3911b434', 
'502bdfb04b60728974133e0a7e4fee78d7b67109', 
'616c20fdbd89a214a4d6234ba003e6663c46f787', 
'7b77f1cc0af8ac44ba84171b8373245d4a0b951e', 
'77deccd8f8123211ec49a544e3d12c27ab59d1b1', 
'92a8c50daee816de0dfeec1f97fdabdec236edbc', 
'34425a2a6317df079e91acb2f7fc9cca4e2800ad', 
'9715f02a3fdf9beb1041924489eb6fbe54177ade', 
'191e08dec40e8e1d3b62d6b491c1712e4bffbc29', 
'03f84ce4a0598b989535590004d85ee2f02f8aff', 
'be9286f747845b5fc9cea722cb0c85116ebce8bf', 
'bc25cf3af0d96d996ff71b4ace7cb88b0a4e1716', 
'edf8e303e79207361cab7b5e3e2f34824dfe0db1', 
'7dc342ba7cee00377f6bbd3df360a16a01876a15', 
'220f1e2d65ec45a1c570c83a12d3ed74ad8f1875', 
'be0eb9bff32a55b0b39fcbee47bdb688028502cc', 
'712cae2cfcd088b7bc09fa7211b4c91e6552db58', 
'5638f07d1683d4a29106ebc79f52b56518553977', 
'074b817c89b161efde221fcce8c9fa8e6719c8a0', 
'5ad3efe4a255f3fccb6dab37e4384d62e83f8b8f', 
'16d45e98b1e3bf1648a8352b805caa7a1edcc72c', 
'324c31bc2ad60006262f45d0abc3013cec3e05b3', 
'91a5a5ef9c529086e6a3ff3842b3c878b63786f1', 
'8d7d0107b3f0ee6fc474b25d694658fdeb22e071', 
'ea4a5e86e50c636283260073abe92fbfcbcafe0f', 
'e3fc84aa4c9ac26de3168d53cd2bc522957bab73', 
'06306ce70246f5e4ec9ee5836340238ae33cb31a', 
'b78fe321e1c202f8b951188a4cfdd076e0a622ab', 
'448ee4bd67f9f5c34265f29fee69c797d66e1967', 
'fd291c518990e0871e0476e216ab28e16d0dcb44', 
'be7f54476dad697d8f4af8ade167ac84a081faea', 
'90adb46978b5fd80bd353bab7371a82958f8806d', 
'e1291231fab5365cadd9969ac669a06d7f4246ae', 
'6306af4582b203a2450a571a20a5e47a1d7ddbfb', 
'01b7ba4f22184f5c7898e016851e1b5a7eb6703c', 
'c45f4323ec04a2d22a1a889d970ac042904ee2e7', 
'1cce7f3bc2c84007ed24c10f9d78020fa16ac3ab', 
'842cea31aaf17497e886423e6765bf9b0f1b8e9f', 
'2e7692f0a89bf19a717fe99ab341084eb7a7ac7d', 
'1a3da15bfeb90bf148035586e9c8f0ae29d952d6', 
'3a1b5dabe36e9e30ca64210a67c516524215f1e3', 
'fc0cb00fe4d235daff5419c2d3cc6de47284a657', 
'1c8c61c1de3bf15c631be62e8b4c801645c2ac22', 
'34b7fd5677c04242f35d7d60f3038e9b6579db0f', 
'20372bf526b32de4480e5d7b2ef159031e500225', 
'c11331703621d42e646bafcd59525e72b3eb54f0', 
'f197ef5ede104a46070e5f29697110bdfc6d8888', 
'465110198611af8cb855f6b36af2604de9c4dffb', 
'36470db2e81df0ade857b4160516dc8f44b63347', 
'1a712558fa3961522f25a673cdddfda73d25d975', 
'38dc4a667188758038d0d10d7cc0ae71ea4c66ab', 
'f3e5ca714a2b37592ed5be2cd985bc8dcc9e169d', 
'7a5e1bbcc0583ad824d8e01ebcc1b24ae604f19a', 
'e3e4b7f4fb0c7d876ae4832626644ff5f07061e5', 
'9078e1ee8b9e31a1f91b189cba361f9319205221', 
'f648cde3e3ba9d91f3465747a960600a0dd12961', 
'ead9e1e97a260f34e6374ef850e3f3c6db238d63', 
'bd31f39f64e41c563026cea3decab6370345c95a', 
'aa95a5a82c07ee06b438b086ddd3d5ad614374db', 
'658afdaf248f01593ebcf8171e241b9cb946848f', 
'50e312ae1db6076a2d9d4fec26b95981bf245710', 
'0c982bb4cbdaa5db117384245be7cb5c6deb7ca4', 
'1a498ac4587fce8961e9dcd4debd79bd4d95f58b', 
'2b5fc6f6353ebfc9272e6f20ea27bc42f676e8ae', 
'93bf16bce4e59ebfb906bd6efab5f77e903a1dee', 
'1f5a0cb982b3451e4b710023070e9b185933e1e2', 
'b6d97d55004bb227229650cb6a8c9bd9c42d2752', 
'ce3c131de8822f0b6c82c03c78a9f7b083b48d2c', 
'51035b8536c8dc9f0ed380ce2255e675e2d8b32b', 
'd9cd7e2deb41602fed34a5456cd975b889eacc75', 
'bb62d84dbb90b575fdcd853c1ab6063c719c5055', 
'5280e0acaf3d6a9ef83accc6dda9d95d4fafb299', 
'0da75bf1ac5afa0ad6bcaf5cf6a1197255a95ade', 
'4aabff083fb36f71af02107b19b7f63ead2bdf3c', 
'b9277ff14623c3d6637afcfe9f258cd12a67eff5', 
'de106b007037ebe69f99ba74d40b85c7265fd2a6', 
'b7b271668a3ade59bcfef0b4a72933af9093249c', 
'a414ebdf3e9acf3af43ef20c1ec333783c4ed1d4', 
'39d41b47a7dd2b51867ddfd88496f0705e4d0421', 
'a9bb7f4e041ec388d8441046e9365c3851735938', 
'816daa3212b124d024ca62f8d2d642ac62580844', 
'8aa5af517ccca96ce5c378858d5ff6f7607aefd7', 
'059efb9ca3d35043f2cee266415260bb84d76dd3', 
'e8438385a196006ca003459401f0cb7adfbfe922', 
'670ef4c847f01bada36696256bd947fca3e4b7b3', 
'1bc80f628b250fcf0e5d72c9c329fcfa8d983d21', 
'53a02ce517c03e7cac469ed33082d4706bc771f4', 
'f87dd9cface23c15c63c0f886bfe3c3c313c6bf6', 
'faec564d0c022efe5a7e6f910c3a1568d48a4592', 
'8b5db62231c82a7de03eedce33bfd6f64f055007', 
'86b114ff4a3ac7a09f61311636ed644cf116a89d', 
'4a14b7b6c66d92699b73fb02d0064179654a4611', 
'4c4619743242c2cb5c04a6736e53f0b09fffc7c3', 
'7778e97a3ce54b58b6bb6db5703aa10721dfd9c5', 
'6e8330d317649eb5b9725c8f9f97e615b56460e4', 
'8298221d14cf4ab06ec16381c3447050b9a84b2e', 
'456c1f2b31f7f1cf2b66338cf6315ed85c60ee64', 
'fdecff9e2df98b3ed84e06d77e7c430b5b764c25', 
'4b01ae8e1e75c0206eb6dfb06643aa2b313658d2', 
'394827e5df04bbd5974099afc740f5f0a3fefb3c', 
'a0cb195b7468a9cc60876b63d988ebb32ab7a7b5', 
'f4adc3fa99599c9fd8ec0edba22245c411512cdd', 
'950d9cdeedc99dc99784f2221aa89cedd7079bb4', 
'e0292e3b578994c50044aa56fd378f84d5c8aaa2', 
'82423a65494fdbdcda70bad9fe7ced6fe466e533', 
'4bab8a4c87ac01dcf4870d9927103f90832c3247', 
'f27f3df888d20fa16d83286de4fa762e8f20a288', 
'23955ab06c5442f0e9a9ef8618963394252d4138', 
'51a44e32b95fec89d32e36752c4e63affe2794ab', 
'3c5739116143bb8c77461e65b8a8572fa70d3564', 
'8995f0a7f80c93d8722992db2a598ad2825e3bbc', 
'edd14662245d2e9b37da95cdf94a6992acb315a8', 
'420d180ee89846a80908ee946bd0c22b678c6ae7', 
'227f5596545efc40ba71717d5fed53433eb121ea', 
'a9153c92a03507309dbc6c9d6c1f434488cf202b', 
'8513c49a0dc100535a85701636e5c05aec8311a9', 
'e68e472eab2a1df28fbe4b6826c99da2c717faee', 
'512fb57a165b07edbd9fa371114d6fcf75362b87', 
'14f668eb0b3f5fcc56a174fe642788e28a750e0f', 
'3e26b77a9d5e9523a1438d77adb8c0da62c4d837', 
'1b4e83023da3d8e81a8d94afd690f7c35471e120', 
'42cacf0060d09118f81330eb8eea63117cae9c32', 
'41fca92a1b6f7dd13c8b5593d359cacfe9dcf7b5', 
'6184a1849487632a319f74d09af22f555faba395', 
'2f4b5f92ce1624b5919814287d98c87f6750791f', 
'ed583a0a693a9b8beda4e285523bcfc4ff2862ab', 
'369f614aa17ee25c9ce865be874c4977ae7c7942', 
'58b862e1b13f578547613ae8d5859a7523732948', 
'2eca5bcee710c3aa346add3ecf02eb5ce6b25d50', 
'7ec35a170ae4f774ab80cca07debd9f946c37496', 
'c7532c40da1ec08885da6bea35b49a76e63d26e4', 
'8ce897414203555edaaba011184d5cfdc540f88b', 
'c30097e7379604f5557458064adb1b46a779dc45', 
'dac04283c757f38220080c1f917525644feacc79', 
'c12baee24acd16aa749b5a28312d4b16732e0d72', 
'6ef04c6d204247372748b5c4f205b5f27c814308', 
'3b5d4fdb47961112d022e11942c4f928e6918b49', 
'51606a00fbe68fa811e5d6f843f9ffce30972806', 
'a498a8ab65753abecac28bc3e01ce404e90ac587', 
'fec1c6d6d2c0672618c15a579b7c5e98e22edbfc', 
'fb15a42a09bf7e8d30df4e85ee198a17d2c8caaa', 
'd161ddbe4550daca25cff776d8dfefa77e3fedbb', 
'626c0afd8d72ccc15f6c4d6e4935a13b8db048e6', 
'a6b85c2802f6a2f9e325d4ffb1e58bdc991cd454', 
'bf1ea2b1474b04d0f8fe3451eed4eb49a46cfa42', 
'89ebb3f615fbdc31061fb0610762c784f5261f98', 
'00e023ae3cdfe5a8b8ad30a590c474d86a0faaa3', 
'e39e64e195786db2fc5f6cc92eb6e559cb219b7d', 
'241a15f6e54f272612273900b390b50bcbebe261', 
'52c236d30a187ce26e1828371d5c8ff9ba3c0300', 
'd5bb7ca34c8aa4ba8194e85a147b5ad9d2d7b57d', 
'8b384f0d4406258e003133457cdd029394a1d235', 
'ce39b66a31f6e80346b21365a03dc557e584066c', 
'6df558ee6eb880e102c01b3f639cf49b203bc88e', 
'19a47da9ecfc2277fb195a4d354c1232f6b33ebb', 
'9b21df97ffb7abef0faab7380eb578a950c3c99d', 
'979b5c04772bdcb7922f5f8021fcb4e780ec59d7', 
'bc5fa120f7e656981d4f4cefd80c47655118177a', 
'cf3e67a2c1df77caa56168c133233afb1acbc1c5', 
'5778860c98130e976266dd172988a26a45987d56', 
'1d851d3f3c7a04fc44b2beb2a676da135bb7d12d', 
'7c9054f03267e18b2e90ce38341c405e7d5c3501', 
'a4da15e2900f88083cc815cd131288722af0b9ac', 
'a42604dedb7d99a2907b402198e63849ec9f3472', 
'9f2afbf72504d551f1f9816a0aa3b711d3146029', 
'c60038e58868b9125ec4e2340500e3fd6d4c8d8a', 
'55434b1e10116f473179b777fc67722e438c25ef', 
'd4848e2ecddcd327ed9e3297e2d17781c712a0f1', 
'a18fc1a8abc9859e06ef33ea4e96e7c14c5ec6b9', 
'f0088ee34620acb584daaf52af9e762b7b78a164', 
'aeffd53f3ae2ac1a7cd997b7b84cd199fbe5ae51', 
'b3925898b32444e5ea35c94543d0e9e759371d5a', 
'2189bc3c1d8b52631f36300d23f3e3bc1c510369', 
'84a32d167625dadbe836a77c2948cffd78cdb486', 
'1bfe0baea6aeaf74293bbbbcf4f60b1709c84540', 
'e3e00d18fa133ebd7ab24900243003c8634902b6', 
'63377ef292f54401e54b715902774bb1db30fcd0', 
'c2263e8668587f766e722300b9d7cef9a9f1965d', 
'869fcbedfb248b52bf2ee96102a5ee21ace28e5b', 
'8c1e95108de2634fa784b91c733345f0b0a5a4d2', 
'62bce459db093b98d2a2b99f471f969e55c677ff', 
'b07d05ac7a7b7d797292c661c9e0cae7d3e21223', 
'fc121dfb43d8d48c828ba879c790557b8ac97ca1', 
'4f6a126e452e86f2e26c773a2d3da0a58b932eb7', 
'51172cf41afd9f50b3f1dd2c3d86164b8cf58ca1', 
'0b24fc55af265c5796aa7da299a241ec7d57eb4b', 
'1f4175f6bb511d64ae69d2275f324b3850169955', 
'e5b562d626305db875def0f2415aa6836954662e', 
'cc9921905294f5e982b6de966760502349a764d4', 
'e1343a94b16b3453bdd99252fcd2d0492f82a333', 
'4c6948a40442a9063d5f836ab93156a989a42331', 
'a28fdb598eef01f8a213627e08e5f56653e1ce7f', 
'66aadd7380e2fc6636a044aecd1e8259c9ea646a', 
'533aea3dcef326e3f1259d6e0363af7a8b506bd6', 
'e7cb9d060058a4879a34b943192bb3527d52d34c', 
'9b5ad917cd602330d9bff7e9346b62f6bff27b80', 
'1e92ab6052147ba534f0af23b84b2f6f098d7a06', 
'3431a909c5fa134ffb16e0c3fb77fbf2b86527c9', 
'742eb23bc879af3b5368c3f5410ed1ab0b10301c', 
'c2be1b209367b9b5feee61b45a805b1aa795e3f6', 
'ab8c51144404cafdbeec1fe08e1ef049974f081c', 
'2385a80ff70c1ca32d28b78c17dbe6d496f1e590', 
'af39784de92e911dbc2328d1e3b070dcdab71d31', 
'd2ccfe515dd97968ca63fd3399542b36e97e8e09', 
'9a4354a5895a7c8e454cb4e9bb9a80bc86e692f5', 
'd82a2dbe3834af0f3d79a6195dbb497dcaa0509a', 
'd2f9a97c10f525731df9fa29d27437589e687f8a', 
'78ad09d1e0d9b5c93bff6c153e559eb2c4574104', 
'257a72f5fba00ff3d7d2928371580e6cc4bc04dd', 
'2ab412f67a9ffd28f053fee867878140fa4e9b01', 
'2fcdd520f9e1c0e5c7881c7b171a5b5482ab1273', 
'872aa6d0894343de94e317d0974599e6a767e2e8', 
'e0e1b24c63f7a2f9dd38579eb10f67cfa6fbabf7', 
'b68a42366dc90d51ef9f8e3dd6bb730b9eab5074', 
'aef9e7d5f38d244fcf76846427fd7615a99dcc22', 
'f22e105c81b38793ad842e4dc3805b2b009c7d30', 
'542408d076b8752bc47c692af0cb20b9993ade36', 
'0db444f49393797aaedc6dd6374ffb1d3eacbcd5', 
'bee486b0b51cdfd7a2efd2572c6605e4092d3f15', 
'd17e9639a40ffa0db4c1b38b166c5ea658b53a62', 
'd16fa9862c5aee852aca7bd24a08dab3217c82fa', 
'624cc2924e8b4e5efb438bffaa061727c3e784c6', 
'2b705ffe3262b9894ff68489b6763074d8f9bc92', 
'aba554f446cd3e2ffcf2c062ffbed47703f8b092', 
'1c997ae08530660a867daed12c0edb8ed73e371b', 
'0f5ebe3f1cfbf5bd7da578329368678198fdd1eb', 
'7e1ac4bed67534729080d77e598f12691309291b', 
'4ccf58aad7852e2241ce01ebd8854853ed8d9f41', 
'a5e3c25ade55813c05e84e83712be02e354bb0d2', 
'6d25e964f9aa40119ff3ca846f1aca2d879e0af1', 
'e8372ab3097683cfc11f88fe9b9a732cd6b115a4', 
'ffb69fdc68c71066a61570f73698fcf91d37e78c', 
'3d0e0e85d3a8da59a4b94b75436e14c1cca8f854', 
'f460354e03eb1677cd6728191b48749d2969d333', 
'5c5a7c32b074456e182051f8f91ca6b48738167d', 
'0d3256d56e01db9840e8990f2481f068bfeff314', 
'4bf74840cd96fa4436af1f73de5a280cb9756220', 
'81ecd5af85adc0f20a2468d0e592c055e24775be', 
'43c2567116acb4ad3f4bcb21a7d1fb80b790c495', 
'e9c466d1770d85a2a8f7d54d4eae3eb18172e5ae', 
'f774b563a9e7f3c553e166086020cfe9a045a19b', 
'4a85342f459ffef81a531bd5e27c7d9ef0aa4452', 
'05add011eccc1e2cb491a4972845f4819cc7ef18', 
'a73908d4ad68faacb14926e36aaf2973e1879a35', 
'b70e9fef4bdafa084a590bd7a64bb00c223fe684', 
'fc667b17a789f1e266348f9b238dbdf513381685', 
'd243bd6a5554c72a6307e51d8a546c359c7f78a8', 
'cd61febde4a7c96b0cfc3fb4205d982c262b07e9', 
'850cab3c8b485ee00474626d39424a752503606e', 
'5495c4ff7acea8c92baa56bcf7ad1288bff90f04', 
'6247832bde7900dc2b813b2626929e6a9c47af9d', 
'0fd5e3b8d86c216164eb6ee43bbe50c57fbe9237', 
'93a0d01b2356ad89c8f7ac6db064214950bf9a93', 
'3bdc7277bad7d5fa246a17396a339971f4f108d4', 
'86d03e1cd907e46bd98c17a767becb155fd411bc', 
'3509e5afb0e2925eb3be2ae5d2028dd312f32f0f', 
'e2dececee7718d8a8bc4cc8414170ef65cbd3e03', 
'cdc89f102b7dacf0ff6489990d17509b5a90b88f', 
'05d568bfa69974044cd6893ed8c1c7ccc92d633b', 
'ffca7323eb308534edeb8295cec946c947a0d217', 
'a80bea512c17ea31634039a9a9117673ef6d24fb', 
'9e0e4897d290594d9069e75ae93778a4c4dceb3f', 
'fb2e8ea8f6df81464c97feda9e0f703607f01d6f', 
'b5b63fee1ffbb561dc800ca59c61d2165a5c6520', 
'67c1bf14350ff370d97cd387987bfedad4214992', 
'e3fd5c13eba8e8ab0e3e940bc28b653c306f8586', 
'6b8f980d6b609d0b3bba021f8ebca172d72f74e2', 
'dec73e36585a05309b83cc746bf58009f4f85479', 
'347a0fd8319bc3a1b690efdee56cf1c9f6174506', 
'c6b8874a338298bb3c8c477c77e6adda3467d12a', 
'f0e7aec831cd69d5b3a4493878fc50daa46f46d0', 
'aadf2b5d394149f3be5844015ab1065094a79bed', 
'3f267a10d80a000097436e5c0aad62ccc663fb68', 
'3a3ccd9decb72ea23f9d511fc9dbed7da4e9e761', 
'13df714a83d6306a746af0b1a0549365049206f9', 
'd64f9fda9755a36bf395045f9954c2245a5ffce4', 
'cf6746d917cecc474ca42aabc6303f13d75b3ac4', 
'43f0094f3828d765ca1f734918e058d766ded679', 
'94d98d93cf9bc96af240e562d1f75daab15b0b69', 
'7058c714e35d2f7cf165aaa79bc18201cfad620a', 
'0e0ed3322dd55d5ab9d21a126888605b0d5ec036', 
'e2a8a962325d325ee09f6f847ae7eef005c76c25', 
'033f4db68312d656c52ddea336fd1d4f5c9b716a', 
'88b8d81f49f8e910bdf7727f410c0e31a0c7f5fb', 
'18be4872744b12e234588e9b7bc0af69e5352d27', 
'196856e7d24419647045a8b8f3bb741e703ecd91', 
'd6e276f29f46a03a63f398e2319479ed35365a2b', 
'7d97064a5a28426b3b1ded141a9507feb91730fc', 
'8f3972898cb781ed576262f94eeef197bd1f8205', 
'2a6f19f5547c58c690e3b1deaa83880fa7b7e3c1', 
'b0f7197e59b554094c8a40e89222a523a4f99df1', 
'c63a8f92b67e9cc0ad49113985332bf690e15fa2', 
'c051efda57c95c5df37377e850888f732fcc034c', 
'5bb8985a410e57e6957222b4f9705bc2660c785d', 
'1e1e3bb8840aed8b13202d08819b6b48c4a58b39', 
'1c42a210d93549d2e0283ded65124cebfd84af24', 
'36b68285d22f85cdaef999305201f1d35237b2cf', 
'7bb3210b98efedf409e6e02536ed1f5bb33bee5e', 
'b36bcfd344b06955016126b50ef95aa35fdd19b4', 
'445696c6e13371fbe21e642857f083749b1d0e65', 
'5e38de815288f605259fabe9fbc71d4be9618a20', 
'e9a61128cf68fca2f586c0b2c651ff0a061ff546', 
'47a1cd418ace7ceaf0483604628e608cf0b7e4c1', 
'b28986fe565c59092ef169beadbcade06c36606a', 
'e7cb992691216dc4c85a153d1cd29cc65192cf6c', 
'cd5cd871dae8bee36fa5cba51c2e40f248e91a91', 
'ee1b27a29a05ab94f8173086199df9ad96daf167', 
'd2b9a1f716c42113e1a7a97c408187e1b0b473fd', 
'46f8ebdfde5b70395ba969ce381081eba0d553e5', 
'4eaf16f4dd396dbb9ba4b87e6f3c33ec4942455c', 
'71eefec144f6e735eee72d0e18191670e0f2cf5f', 
'a00cfd403e385c55d646a322c8919b565a46f97d', 
'a360e681d5b049d738665a050af54f6d6dba20bb', 
'e2747d72bbec4d5f32c973ca950097846314a131', 
'06293bb5269db9158ef89720cc4b4fdce01bff06', 
'02c5e9f628ce3417a0d7a1d1b9b18f799feedd49', 
'866249e2c2b2cac70f92c8fd319b4a5cd323a13c', 
'd742731de7aa99efc1432ed421fbfc8627951c2a', 
'2f4fcec2e7b5a366f4bb492cc31172ccff0fc7c1', 
'48ce74112eab020f27aa9952c794e9f771976c5f', 
'b1cde52fd9ae1fb77f614173faa5aed560ff6fbf', 
'915dbe94f1e611753766092784f22d416fa6a2d2', 
'0578ee15c918205b44f9c95fb4547f53f6b82b1e', 
'bd6e3e487b2c705adf780866be8adec64eb40e7d', 
'7846975194953ae3be274e5150d089b0cbfebf12', 
'dbfdb13c5dde064282a8c97ae34f84e5fbc6215e', 
'a7aff778f5d07fae976f684c29a4c3fa694e5604', 
'd95a74c04435f12a820cc23881506ef0d7c2e10d', 
'7ba3ab9b1baf3b2f2b7250e2c3725ec7e204728b', 
'5c9b392a4d13186a512fc85b7b38034d6ffef35b', 
'3b338c4c5fff343f4aae826cfd5b54c4ec82e01c', 
'ba7e689079228d9019969308c9c351f3984a01b2', 
'b9e7f5d9b0de941f3dc19a24e7b06957584ccd87', 
'b370bfcb5017a4bb12a753ca364c00f9cd22cfac', 
'329b191f372d1a68ec6a0c5ed961096b1e885870', 
'ffeb4b71659c4e96a3641c8682d84b53c82371f9', 
'e49c02f50ce626245740f694f675320ee086341a', 
'301d68a8ace7907f9eb47facd91872a100290936', 
'bbcef92b2a8b55625c5518c29dec1dcdd0d73761', 
'd845b4e7f1b4b668623cd88f98caf27cb99f831e', 
'91f0d501c1c695d92ea80568985ff53ccc26c5ab', 
'156fa6ea0d73c11cf7cccc60148d75a9eb8c6357', 
'11012c2e06007241c0498e5e691552cb81eab371', 
'17bcddb9678a11952763f5354b108ec9da3975d2', 
'8aef3f53dac3052b0bb84fd379968e2e90e41a7a', 
'ba04b8ac3fc2cf763815d07bf7166e3a7686da71', 
'367cace1a549d35dce92c03d5a9532a75520d295', 
'c3d6df226dda97551a8efb2b76ae2bc7abdadf0a', 
'd4e4336445f99331f249968e8b23c9892aafa4a1', 
'aab5a22704a4a634047f200f3491bbbf520980d8', 
'f67f2ac9fb85087b4ad2ef91d261122e507cbe08', 
'a10d8f3b7bda47c192292ee7b6f3c5406342d9ce', 
'8a86225647df14b3ee015aead7f8daa8e9288981', 
'd263115ac4029c326e3a5f9d79cc21cfa328109a', 
'bdb08b3be3f0c901a5ccbb8b689fee604bfd2a19', 
'd3c12a7f9e9aeda4b6f2b104f3f7f29be9d0b6c1', 
'0b628b5a68621285c74360826b91754222458098', 
'125a87eae4a0372148ec06cd849bb66b5af6b1be', 
'8945f3483d510316fdd04237f3f9b04f763a98e3', 
'1e56abc4c93bf6b9936bfd16b6caf38e365142f2', 
'ff353b1a317839027755d1756cf2a1dcb580effe', 
'fdfaafafcb56436f72bfc58a25c74c98498bbdf0', 
'b477e234c0b70d6e395556f22493a0c5ab4abfc8', 
'b6f99071a9c6df9377af05be882e5444a1f8162f', 
'e7d67f04422fee9a7a880fcf2d27a998ae181955', 
'7d070f517d17c76e2084183a0dc78143f20f9cb0', 
'e1269859016b0237dc4ea43433a23ff3b10a1863', 
'f5e84ec1b73cd408a144b054f0b93d1083497184', 
'49c6fad29ccbf5087d6fdc4899a5025a2281794b', 
'68993b196f875d25f51ddeb16ce51fca2e723103', 
'd5004af69d77bbd5c3afb26af194ae4dbedb4f96', 
'bb7c658565a95f0d2890aaef75c897f5e56f0f19', 
'da7f264629274e1f10fa7c079b364624f12a440a', 
'92c092360c7a29110c907457c5fc29fa72558cde', 
'6a4c2ce26e756c07c1e6ba84b90acd011fced5db', 
'lc7715dbf7ae8278dd116692c125af10d4b003659', 
'2a5feaf71792a16da56444a5913ad4dc2495a53a', 
'd92ac2812d52502b97f629098e325f9268f908be', 
'f7dcee47b54de6b81e36c6ef7253dbe4d77671ad', 
'0886068c835bb80e5b5b8e2f86bd8f766c3a097a', 
'a35aa329a1b502f34af5338722359e19cf87ae3c', 
'1936745d3f9cd0e87823387061070052f228aa12', 
'4020e4b67624c247db816d36911d18e2b36f2a3b', 
'b18c772335675d94e6d3484ed1781421f3c3cf5c', 
'd5ee89df284fa458cf57209be4eab8da302d1625',
 '055bd4d6c8c5cd67996a4ce5b530d934913e56bd', 
'f5720448bb3b029ff2cf0a6905ee93506df00f93', 
'695a17b9125febfac5279ba0a2106cb9ccfba1f4', 
'50f056bbbb559d6e47f716efe9c6c0e37a2d8c64', 
'0814df677928ccfa881ac05936889d9f8929abbb', 
'34833b92ef32cb0d786659ffa5bbb88c63405ec6', 
'040f8074953f71158962fd7961608a4672502cb5', 
'd869bcd03db537bed060459341da5fe11f1b6928', 
'980a1f840575e2cf986ace1867c7dd4ce355f7eb',
'3b83573181e0c8bb5b374355a005a62e06037437', 
'cbe9413c6c52a9c09bd91ee8a31c4b15592795ee', 
'bbbc62399ec276d21b34e53d3ba629be82a373ce', 
'fa6ce7e02bd76971ac9591c501d6776597f4ccc6', 
'265765f56e5fdd02e87d96b2bb718d4b86842800', 
'feec575aea769f03d28696db05badcd16e3c3126', 
'35fefc28a292e196de5aa22284842c20a3ddafa0', 
'8dc429a133fa93646f9f352195eedb5902063a4d', 
'398b40fd26a6cf029b0a2d2527a9f217b9bb9d3f', 
'a40c491fca4b4c2b28eb82799eb8e12e13f96082', 
'd01e40ce6e768f95799568b758078c52181db45b', 
'9af191626a69206503bd18b291b1ab6aac9677c6', 
'48820f4adad8bfd136f6d4a87eb2f2cfcb5e646a', 
'e109f1b5be768db14389b3351bdd9aee41677ed6', 
'7ee0623aab102317b51fae4e7a7960870f0f8bd2', 
'e77def61a5a02cf8f991b98db3744806d503bc46', 
'fcf6684f0c23a1d4d2283f4b1834298e9b4059ee', 
'f59440d9fe30822696fba9f5b641d68ba8779d40', 
'a30a809878050c3b2550dcc40e7819219d72a9d6', 
'0d096514d75b01325b93b40ee8831b84baeffee3', 
'bcc2293ceccfa78e9a86850c86338999b243dfba', 
'11dfdbc5617a46936b47c0f1c57838d74f675c34', 
'8c2e1d302f16ea6406c2e5fbdf5674e076d9e176', 
'3d2ea3531bfcb58458d010795eaf6cb26602a654', 
'98fc55cfa0f6cc4b67f04f166a8e548b67af5774', 
'4983746c466c70a4a26976f9e74b9ff02baafbd2', 
'2737110a3ee37b4ef2fd0a7ea8530e9cde6c9ac3', 
'465249f9e4bf2a72e1a0ab662c71a9e3aaf194a4', 
'b06fe0afa0b6504145466cfe2e4b712d3711d3d3', 
'be11a361f3f8878b0473a3d123e04cf7aeca7214', 
'f0842a9e2c23782d9c74d19a65dce54e4faab941', 
'85ba66e2b3adb0ed7eb155f7f6820ce52c5e1259', 
'ad4ce814945c35f1097421c98bbfd271ba43c9a0', 
'c3bdb11dc07c69499acbd8209d858ce67d69b285', 
'2fd919183aee43faaeae100699e15cc595cd0256', 
'373305ed9ce3f30a8574a49f89143a4b62125746', 
'81bc38004ba3fa19298d22880801e16dad14187a', 
'ba113a3f48126ed95834c6adb1ea1ad28633fc1d', 
'ca21d9ada38db41f0ec0e06042cc3e769b0e0a86', 
'a11162aeb26d83134e909d6aa9f3f5d9a4df466d', 
'79c03cf6e34053ad6fdb20bafd9c9857abf60e52', 
'999d412c6925afc85e71b419b8a27ad15376aa6a', 
'b50f51ca3359c1eea092f61ebe502877c262f140', 
'd4aea93ec78bb651e8ff57b8ed0e1fbc5caaac31', 
'fac00a26e41d35cad5d0446984e5015f6df5d34b', 
'b4439195e0c4007a7e0e089ad2dd757083e8198e', 
'9991809ac08a80667ce27e63598af657162955a7', 
'23a051a79461d2153c70cf2d8623a28fa85a9aee', 
'1f39d8bb96cc331d7171e674a1adb1004dc64dd6', 
'7fb828776d2f12ecef27a7898ce7d9199f586a8d', 
'3cb35684ee0dcb829495dc95d0cde4314456e6a8', 
'7d8da2451cb9167cd40e0948618ac32d7d06bdfe', 
'bdca07d7a4ca6d8922fdd968db0d4e2d0006ade9', 
'ef74d51d52e7e99d9e287dea7564313737da9dec', 
'df35ef0ed51876931a60c84a62faf00dfaf8d27e', 
'672aa80733d2efe7e7081a6782be6a3754a205d7', 
'7b3b895795ce460f96d6259ff176caeca54fab83', 
'218af9191474aaedb3c70e18e6077a9ed0423783', 
'1689d0c7336286a84e233905535d90a5abd9d381', 
'f6c5f3b4c18ea4b63316661cdbf137322300b0f3', 
'b7e30b8cbeb4155f9f756d33b64efd8674aca5a3', 
'84a115e915ab941f5d3512c98f26f24a28759fc0', 
'8dc74f290e3e2ee02198c7f768cf04537b6219f7', 
'9a871e9d2361e6d3a68e3c58e75796a76992fe95', 
'e6acb474ff3adb9743d0fabdd3badfa13eef1439', 
'055522bfe32b6b085650eeb9a07a5faa8d0fcb73', 
'526a1eaf73db2328cb655b42f24a12a77028c953', 
'df8c958e02fb5e3683296f10b76aaf8383c1ca70', 
'f7d1c829c1c21fb5ab9072aeaf6456b6e4010d39', 
'bc17672a55f2637f8297b86c9af2c9497b2ad51f', 
'7f67f09fc7e26f12e5fb2ddc7fe9b077e06a050e', 
'c326fce5ebfbd7746a67df610238659e605ef5ff', 
'05347fb1dea34cddf353fa1922c1ee09d6a11d18', 
'153e58d4984b36ac78363ba8e0865d783c73fdfa', 
'dcd827b2c5e136245272bb28bb72dc603f2309f7', 
'5afa173e50f502252969593ae40f00ad0a7f1fb7', 
'c537d6647893cf075b5929199c630e05eaf00760', 
'bff50f342b2e25260392b0ebb23a425f5759feda', 
'9316c4326f07a7311efbf47097d611dcbe898e46', 
'3eb08bbcd5a30f547dd2eef5daa1c6337dd694d4', 
'e04833e007150b2e0e2db58a5612f23549bb75af', 
'bb1181f5d0529e334da1555343a00894186ca024', 
'6e5ef92b9644795abaff8904d1b1f719003c6637', 
'b3e9860ba4d179b1296eeabc11d839ae8ba96047', 
'e0377ffd6b1460fd9840930bb7c86b0f180d34f5', 
'cd02dacb5e079d1c33b01f496f45358918acacbd', 
'95a0be630d0a27bc3917dd035da7ad0f90710a26', 
'b8d67233500188039aaee9481cf9ecb269559ec6', 
'88c0e9951464e50c856e31e450805717a178110f', 
'8a03ebe5d622e4147c88f5412f578612e67c1dea', 
'ec1dbb517e56d89168d227236e727fe934bd6008', 
'f4a9f2489622e08eb7f790a7c6f71281a146f817', 
'd3198ff98649595812eccd658ea709c1cdcebc14', 
'605590d5508660192ca8d7f8c8140654eebe457e', 
'be2ac1c9caa946f768e43aba964c287e8d50ed94', 
'93de6fbe611ce2c9a8d5c12a8e64787295149aa1', 
'b94ee01977ed8b126c82cedb94e6fed1f3e33ccf', 
'60408c7749fbbda1a2e4afd77b4555c79a419a99', 
'd890b935df4485b99dd0e7887f4e58e2521bd374', 
'180cecd3f70b266a63b90e3dc1bc7a85fd43c393', 
'e58ba407696d0025557626fe0050550eae055ce2', 
'17941b975f9945ab81a635f1bfbed6c4f987c012', 
'3a6d06dedf63c58f5cb184288ac423d0facfc69e', 
'1b9677864b3b5812a97012a93b982074621a73eb', 
'f455c3d7c16e4c035da6e54de8824f0680fdf2da', 
'ff4e0abc952cf6c4010294b62a9cff736f8c5314', 
'b8dbd1d3ce8d8d207f7321dd3848fe16f8ef0db8', 
'73ba82fd05506834b084d882d8552034af3f9b44', 
'e4a2e3d45e80bb0069fd7cb5341fba3c572a05f4', 
'5027767e2e89e08a54577e7a6783c3e578bc09dd', 
'41cbdb307a0e88d97e932ea0491e19a722a7ba27', 
'f4a9bfcf9d75b2be2c283af03e998a8d95d97f5c', 
'ffed5b44b2eeb67574291bd8deeb3ff533e100ec', 
'c346acaca72cd9ecd2b53dea9988b5072529048d', 
'766a1b3442490d824a46bf44ee33030a27a27373', 
'ed4ed78adb021953d61f475992f95489377b293c', 
'353f64ff2f433179d9461184e6bc579e84962d77', 
'28b619f3416a842c0a7b0aa149d3cd676998a571', 
'd9b4b40ac6191b2612abfae901e713d5ea10d08c', 
'e6ea66986413031e32a8a4cdddb79066da168820', 
'c8d2f969c666ada9f1e73bcccaa022226e5de434', 
'0e2b7165baaf222e55357b4d650ed230c1085fa5', 
'73d15f0d89e7996c54b81b8bc9cb5f5412461101', 
'b597cbd02320ba388cb39bbe05ea015c8b17a660', 
'55a10e5069fc088a220856c2f6086bc67fff5d46', 
'e1c1016042e515d082d891f7bf2347c7814985a9', 
'16e927f400ee08615ade18bd1794a8e6a65f8991', 
'd0809fe3fc7571455e60ef36b9945a43d1ff774e', 
'b41aaa5b362d9a7d032dd77f8dea99882986b75b', 
'08cb0445fec085455b1f3ec8e29d2670545390e0', 
'0408bcb2901d6295939553d7d3fb6a6619ddbe8e', 
'5e926402e7fca40719be0ab04881d61f7bb5bbca', 
'5b465b9b824b16aa5137168d3ead8be3d56d6da7', 
'1eac0eee4f2fdbdf82cf714ffe15d2438ff987e0', 
'caba8fa192cfca521073ce7d4439102ebf7b07f3', 
'6e9ae7c5ab239aad5580c5d27f646fb0e17c885c', 
'4d3ec82a1d54243065872ccb2c575a6503179b31', 
'cda16ab4a87aea89ab69fe699f925f7509ab2311', 
'ec20c6a8078d864c949f0130623166e606d13b60', 
'e87b20b3bef42b4281ea92250de4e2e30b7ace8b', 
'ee914a39b364587c8af67bdd0046e378ee9a5776', 
'039aec2fdec51600cad9749e2bd73664878da575', 
'7d5f86e1fdfab2766d29627b5197d9d2f63f57a0', 
'7f967110860813b433ad15c54f1f3dbdefba08c5', 
'87c551646beba696de28076dee0bf7f68b9d73a9', 
'3fc5c8d39a15184ea2051cd75019f8b3b551315b', 
'90abed2f78172b57075f47167d562c6bd352606d', 
'3850b4731f966604dd56c966133cb50eb734bf5b', 
'd30a1bc0adb9055c2e44b70dc273dbf421b0bc3e', 
'ba283ea19b3ec69718b4a48b18122641448479be', 
'e2c7b5e21f57b76b4ed3fa4bf591b2726d74fc74', 
'2edc0d7d4fe94a38c1d4543e205462f5c293d084', 
'f69447b7de5facf4b8b48330daaf045bf6d67cfa', 
'f7cb36b1368fbe7a7bb80970ab8330abc08e1fde', 
'158fdb06d9fef273ff44e53559f43854daa4e54e', 
'739c0fbfcbe1e6b9bf9b0e853273c8c452391f0d', 
'd2f1f6c9dad1302c6ae03a92e044a8dbef6744af', 
'f0fbcd8f7a56b4178999f723333ea8b0189a511c', 
'be00465c663a709df20c58d1008de321524d4811', 
'5fd474f188145e16e4c0341655a4878f269deeb2', 
'82f43aee349c488b9e024e5b4ec9b60ce0f4bbf6', 
'e60b70bbe36258ec70e2ae8c259c1aa0d226d28a', 
'0a2c96320271c17ab3c0428b31736031f318293e', 
'e8cdf69c733a43c9c37bf15bb2dd1272a60c7462', 
'1dd83c8fc9aee373017e14bf48f8ad9b7febdee3', 
'4109ad9bef413fff1ec0627a76826a82398cf13f', 
'12a919dfed3548126e8864c90d72db8dc3b61f6a', 
'24c8d154a0148d8d37285922357df20dda1029c2', 
'7ed65cc72711f17d15f18615fb1f26b6b5a043f5', 
'31b181239b2babb686453cc5dd03ccbcd6efe96e', 
'8f88d5136bb4ee007384e769d1911cf66f61d94f', 
'1494f259c7217299d1449ada63182275a2e733fc', 
'4315524e4001afbafcb11d4011bf318718abc6dc', 
'b56b42fd7f558bdc130a7db60ec2fc758dc28d44', 
'91e9a780310b6fe838bba6da8dcdffa2c4005af7', 
'1318d5b0c73283510285af0481bdef477f7388ce', 
'247448f9ff3bce363bf2e996688cf440c119ddd5', 
'fb7cde5a98798f046848a703f5703694df9da3f5', 
'e7efd338b1adb91fe6e0ce0ad4ad9830b4a61ba6', 
'5df024c2e294a471980f602bac32b93c7a091be3', 
'a3c8789943abf28f8a81fe810039a7beb8d1383b', 
'610273d5ab3321a9f5f6d7357c85e19918bfd1bf', 
'2bff84708b54dfedf5672305f1b91b28bafb5d21', 
'922a4730130ad4ceedbc74623419e43ebfa15fae', 
'46492e24867969a2ecb3fa49b9852efc5aa82339', 
'24777c252d2b9beaece91f95735d5017a8329f10', 
'aa551af641839f3d39a5d323a92e3778b74ebbb0', 
'b50e20226b2523093ecda51ca5cdb701bed1bf54', 
'2d31e3629644d9b8e3f52a68e2df421b146bc389', 
'436ea6ec379044ba004b4a1f7fb412b264bfd415', 
'5f69e76aa68df24e90c9e2bec93587c970848d78', 
'8c05b03af799ea4f84319d45936b91402b3da693', 
'533eee48caa39650f9bbfebe6957d47c76289f6b', 
'c8ed5186f6ef64552376535a61a6eb1f7ad55b05', 
'1f91a7f90f7c60ba82ebbbb5987ec8b48386f15a', 
'b31d890f2513a57993e638bc45dbd24f4b9ec8c7', 
'a4efc86e880602d304268e21de5c0bb54949c115', 
'91fa9adb4b7046d18ceeb6e13cfd8c782900cbd9', 
'1032dbc2587012658ae420f201a26056e9bf7cdb', 
'e811d3e7fa2aad93df931ce0f4c533391ad520ff', 
'e0893e0fcdd28a11924445c2ded61492b868007a', 
'5fa56416902456c6c3c96991189e5b93dd172dda', 
'961f2cbbebcaf757b32e362d645ec7ccba9ee6ad', 
'1f760f807591e6ef5a6436e542e34b216e38bb75', 
'ef0d40af1c132b55f5bef1c4368b1aa8a00097d1', 
'f4a241e912803e719668878482768aea07356abd', 
'9fcb7e8af9e925b2c5dfb56baea24c649c9733de', 
'82589fb39dbcbd394cb2763d6cfdf982636db99b', 
'662e763803adea0eace2027d50a3af3eee6c00c8', 
'9450fcb7da39f6799f66d49d5d4b5ec983d4decc', 
'0c39e1a98ad9e892e61ae6828e3d2a315c2b03d4', 
'f9e2083dee6242966871e9ed6274069f614f0bea', 
'bb3350995beae40928aea394cfb563c60df54012', 
'17ea4e4bb63dced8964b8a1f0320f50441b06810', 
'418f3c3249f9c3a90e7e0125db43b3915a0621f2', 
'768946b9631f3e53824e52044eb199c5f1222a35', 
'2e7dff39b36459e71e4ed9147c36190f3bd276f5', 
'08dcf12eece5a8bc991ac34a597b8167f0269bd7', 
'2b8b51e451a0c88c9be00ce305c61ca6110179d4', 
'78389b41517f42a2fe351b6ea51b746d2cc24fdf', 
'05f9baf3cfb878c466668febdf57c74e719b7252', 
'3939cfabcc505de2b5dc51f367bdf75a65ea2731', 
'ca7be9cca6c0ba8734d2d3f717b8f4909d50d89f', 
'df9d2a3d1fa0652e823a9609752074b771c42ea1', 
'bb74692ad14c588f6be6b673eb858170cdceb410', 
'a4bc8a9d2aec74991864f972c0ed051748e9ae05', 
'975b68453dcda2745226132bd99b8e20f2627b03', 
'4f87977bfa1753699b2af85c4c538d7aa70b5fd8', 
'3c343adad403cb474b3489df987b7f781e631cde', 
'b1ca52703c26b6a4aaff72b0f7d563039fc29e7d', 
'9709b8ea5a864ee0a5a8fa7b62eb96ba81c07f5c', 
'4f59c830c92f357b1255aa952b0cb9c714a7b390', 
'dfc11c5d6294db52463d9ab97638838e0d00ee91', 
'39fb67ce79ee5a37a14aa17d095ac1a690bf5e22', 
'8c6b9eecf54ce9bce8a362591e939ef8ed79168f', 
'63e8a668e5514db5b0cf6ab0d56c403346bce151', 
'3fdf7d46fae9a99454f3fcb9c885ccdc1a047f17', 
'737a35a60a71dd7e6181593e7853c83fd89a8625', 
'a877405ba01efdb6b75ca3bf47a631989336c64a', 
'b5036e3b54b9cff5f7c850e60d4559ca8ba81e92', 
'6af9f6db51d4313f6d99907a7a818d0283ac3a10', 
'2aa26da151cae6d07eadceb76c2447a03476abf3', 
'6212990d7ca4433da82127bc84f4340932185f06', 
'82000eda83145d249ca22b37c661dc9503c04fe2', 
'0ad981482c19da5743af766d93ca4b8c63228e32',
)
def foo():
	global tit
	tit += 1
	pesan = '{"event":"live_health","type":"live_rpt","live_id":'+slink+',"user_id":"211640392","useragent":"Android","appversion":"4.3.16"}'
	print("In ke ", tit)
	if tit > 0:
		if '{"event":"live_state","type":"live_rsp","live_id":'+slink+',"user_id":"211640392","state":"none","useragent":"Server","appversion": "1.5.4_Yellow"}':
			ws.send('{"event":"live_health","type":"live_rpt","live_id":'+slink+',"user_id":"211640392","useragent":"Android","appversion":"4.3.22"}')
	threading.Timer(10, foo).start()
def anti():
	for a in range(0,1):
		i=0
		for tokenl in token:
			i+=1
			try:
				headers2={'Authorization':'Token '+ str(tokenl),'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
				response = requests.post('http://id-api.spooncast.net/lives/'+slink+'/join/',headers=headers2)
			except:
				EnvironmentError
	
	

	

def on_message(ws, message):
        global judul
        global nama
        global response3
        global status
        global timeh
        global timehl2
        global xz
        global z
        global token
        global tokens
        global listlagu
        global lagucountr
        global timerr
        global mjid
        global courid
        global nurut
        global taplove
        global spamn
        global spam
        global nub
        global iduser
        global waktu
        global aktif
        global tiru
        global tirun
        global tiruu
        timerr +=1
        chat = json.loads(message)
        print("ini courr ",timerr)
        kesurupan = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Jing In here 🔥!"}'#spaan awal
        nick = chat['data']['author']['nickname']
        uid = chat['data']['author']['id']
        print(nick)
        evn = chat['event']
        if 1 == 1:
            if z == 0:
                ws.send(kesurupan)
                z = 1
        
        if evn == 'live_message':#data message
            psn = chat['data']['message']
  
            cht = chat['data']['message']
            print(uid)
            print(cht)
            print(chat['data']['author'])
            emot = [
            '🤭🤭🤭', '🙄🙄🙄', '😝😝😝', '😇😇😇', '😌😌😌', '😔😔😔', '🥺🥺🥺']
            ya = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"' + nick + ' YAKALI ' + random.choice(emot) + '"}'
            tidak = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"' + nick + ' TIDAK TAU DEH ' + random.choice(emot) + '"}'
            bisajadi = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"' + nick + ' LAU SOKAP ' + random.choice(emot) + '"}'
            bodoamat = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"' + nick + ' KEPO IH ' + random.choice(emot) + '"}'
            listjawaban = [
            ya, tidak, bisajadi, bodoamat]
            #tanya jawab
        if evn == 'live_message' and psn[:1].lower() == 'j' and psn[-1:] == '?' and nurut == 'off':
        	kambeng = random.choice(listjawaban)
        	print(kambeng)
        	ws.send(kambeng)
        sapa = [' .Wellcome You😊 ',' .How Are You😋 ',' .Use Your Earphone For Qouality Music🎧 ',' .We Wish You Always Heppiness☺️ ',' .Dont Forget To Love Big Sis❣ ',' .Always Smiling !! Ya😊 ',' .Youre Funny Big Sis😁 ',' .How Is Today?☺️ ',' .Take Care Of Your Health🤭',' .You Are Cute😁']
        ljoin = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"' + nick + random.choice(sapa) + '"}'
        leave = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"' + nick + ' Meninggalkan room ini 😌"}'
        ghost = [' Dih Sinyal Jelek Main Spoon!!🤭',' Make WiFi Makanya Akak Gmn si!!🤣',' Makanya Akak Jan di Goa Main Spoonny!!🤣',' Mending Jual HP Buat Beli Tower Kak!!🤣🤣']
        lsjoin = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"' + nick + random.choice(ghost) + '"}'
        uproom = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"proses naikan room dimulai..."}'
        likee = [' .Thenks For Teplove❣️',' .Thank You For Sprinkling Love☺️❣ ',' .Thank You The Fake Love😁❣ ',' .Uwu Thank You For Wanting To Love😳❣ ']
        llike = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Akak ' + nick + random.choice(likee) + '"}'
        tidur = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Jing Kesel dah Jing Mau Istirahat!!😏"}'
        bangun = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"JING MAU NYAPA YANG DATENG!!😏"}'
        nada = [' Apa Akak Manggil Jing 🤭',' Apa Akak Imut Manggil Jing🤗 ',' Kaka Jing Imut Ya Make Dipanggil🤭 ',' Jangan Manggil Jing Terus We🤣',' Apa Sih kalean manggil Jing kangen!! 😍']
        ping = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Apa ' + nick + random.choice(nada)+'"}'
        makasih = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"' + nick + ' unchhh sama sama zheyeng 😘"}'
        jawab = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Jing disini akak  ' + nick + ' Sayang 😘"}'
        sendiri = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Lihat sendiri lah ' + nick + ' nyusahin gua aja 😒"}'
        siape = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Kamu kan akak  ' + nick + ' yang bikin aku 😊"}'
        rank = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Rank sudah diperbarui akak ' + nick + ' sayang😁"}'
        keluar = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Siap akak ' + nick + ' Top live sudah di update 😘😘"}'
        jmbttt = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Tenang Jing ada di sini kok 😘\n jadi yang narik berhenti aja yak 🤭"}'
        jmbtt = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Tenang jing keluarin setanmya nya teruss 🤭🤣🤣😂"}'
        topfan = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Top fan sudah diperbarui akak ' + nick + ' sayang😁"}'
        hina = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"NOTED!\n LU INGET YE LU TUH USER BARU YANG NUMPANG NAMA SAMA GW"}'
        hina2 = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"NOTED!\n LU TUH SAPA GW BIAR IQ LU GAK JONGKOK MAKANYA"}'
        hina3 = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"NOTED!\n LU TANPA DEKET SAMA GW LU TUH GAK BAKAL PUNYA NAMA DI SPOON"}'
        hina4 = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"NOTED!\n LU SIAPE SI CUMA SEKEDAR ORANG YNG GAK PUNYA MORALS"}'
        hina5 = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"NOTED!\n LU CUMA SEKEDAR SAMPAH YA INGET"}'
        listjawab = [hina,hina2,hina3,hina4,hina5]
        #hina otomatis
        if evn == 'live_message' and psn[:1].lower() == 'h' and psn[-1:] == 'a' and nurut == 'off':
        	kampret = random.choice(listjawab)
        	print(kampret)
        	ws.send(kampret)
        ketawa2 = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Wkwkwkwkwkwk 🤣🤣"}'
        ketawa = '{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"HAHAHAHAHAHAHA 🤣🤣"}'
        listjawab = [ketawa,ketawa2]
        #ketawa otomatis
        if evn == 'live_message' and psn[:1].lower() == 'w' and psn[-1:] == 'k' and nurut == 'off':
        	babik = random.choice(listjawab)
        	print(babik)
        	ws.send(babik)
        grting = ('🎼SELAMAT DATANG🎼\\\\n🔈JANGAN LUPA TAP❤\\\\n🔈TAP GIFT🎁\\\\n🔈FAN TO FAN👥\\\\n🎼STAY ENJOY GUYS!!🎼"}','ꜱ ᴇ ʟ ᴀ ᴍ ᴀ ᴛ  ᴅ ᴀ ᴛ ᴀ ɴ ɢ  ꜱ ᴇ ᴍ ᴜ ᴀ ɴ ʏ ᴀ  🌹😍\\\\nꜱ ᴇ ʟ ᴀ ᴍ ᴀ ᴛ  ᴍ ᴇ ɴ ᴅ ᴇ ɴ ɢ ᴀ ʀ ᴋ ᴀ ɴ  🎶🤗','ʏ ᴀ ɴ ɢ  ᴛ ɪ ᴅ ᴀ ᴋ  ᴋ ᴇ ꜱ ᴀ ᴘ ᴀᴊ ᴀ ɴ ɢ ᴀ ɴ  ʙ ᴀ ᴘ ᴇ ʀ  ʏ ᴀ  ☺️✌️\\\\nꜱ ᴛ ᴀ ʏ  &  ᴇ ɴ ᴊ ᴏ ʏ  🎼','🌹 ᴛᴇʀɪᴍᴀᴋᴀꜱɪʜ ꜱᴜᴅᴀʜ ᴛᴀᴩ❤🌹 \\\\n🌹ᴇɴᴊᴏy, ᴅᴀɴ ꜱᴇᴍᴏɢᴀ ʙᴇʀᴋᴀʜʜ 🙏🌹','SELAMAT DATANG🌹\\\\nSELAMAT MENDENGARKAN🎼\\\\nRUANG RELAX🎼🎶\\\\nSTAY AND ENJOY🎶','🌠sᴜᴘᴏʀᴛ ᴘᴇɴʏɪᴀʀ \\\\n🔹ᴛᴀᴘ ʟᴏᴠᴇ❤️👈🏻\\\\n🔹ᴛᴀᴘ ғᴀɴ ᴅᴊ+ᴍᴊ🥀\\\\nᴛᴇʀɪᴍᴀ ᴋᴀsɪʜ sᴜᴘᴏʀᴛ ᴋᴀʟɪᴀɴ 🌹🙏🏻')
        #bing timer gerting
        if timerr > 20:
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"'+random.choice(grting)+'"}')
        	timerr = 0
        # top versi bebas
        if evn == 'live_message' and psn == '=top fan' and nurut == 'off':
        	headers2 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        	response2 = requests.get('https://id-api.spooncast.net/ranks/fan/',headers=headers2)
        	ws.send(topfan)
        #### top fan
        if evn == 'live_message' and psn[:-2] == '=top fan' and nurut == 'off':
        	headers2 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        	response2 = requests.get('https://id-api.spooncast.net/ranks/fan/',headers=headers2)
        	zz = psn[5:]
        	xz = int(zz) - 1
        	tangga = datetime.today()
        	nic = response2.json()['results'][xz]['author']['nickname']
        	coin = response2.json()['results'][xz]['score']
        	ws.send('{"appversion":"4.3.16","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Top Fan]\\\\nInfo username : ' + str(nic) + '\\\\ncoin di sawer [' + str(coin) + ']"}')
        	# top dj
        if evn == 'live_message' and psn == '=top dj' and nurut == 'off':
        	headers9 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        	response9 = requests.get('https://id-api.spooncast.net/ranks/livebj/',headers=headers9)
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Top Dj telah di update"}')
        	#cek top dj
        if evn == 'live_message' and psn[:-2] == '=top dj' and nurut == 'off':
        	headers9 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        	response9 = requests.get('https://id-api.spooncast.net/ranks/livebj/',headers=headers9)
        	zz = psn[4:]
        	xz = int(zz) - 1
        	tangga = datetime.today()
        	nic = response9.json()['results'][xz]['author']['nickname']
        	coin = response9.json()['results'][xz]['score']
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Top Dj]\\\\nInfo username [' + str(nic) + ']' + '\\\\ncoin yang di sawer di live [' + str(coin) + ']"}')
        	# cek durasi
        if evn == 'live_message' and (psn == '=status' or psn == '=durasi' or psn == '=info') and nurut == 'off':
        	headers2 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        	response2 = requests.get(('https://id-api.spooncast.net/lives/' + slink + ''), headers=headers2)
        	createdl = response2.json()['results'][0]['created']
        	tanggal = datetime.today()
        	cre = createdl[:-17]
        	crea = createdl[11:-8]
        	creat = cre + ' ' + crea
        	creatdt = datetime.strptime(creat, '%Y-%m-%d %H:%M:%S')
        	selisih = tanggal - creatdt
        	s1 = '07:00:00'
        	s2 = str(selisih)[:-7]
        	formatss = '%H:%M:%S'
        	timehl2 = datetime.strptime(s2, formatss) - datetime.strptime(s1, formatss)
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"room sudah online selama: '+ str(timehl2) + '\\\\nMax live: 02:00:00 "}')
        	#join
        if evn == 'live_join':
        	ws.send(str('{"event":"live_health","type":"live_rpt","live_id":'+slink+',"user_id":"211640392","useragent":"Android","appversion":"4.3.16"}'))
        	if status == 'bangun':
        		ws.send(ljoin)
        	#ghost
        if evn == 'live_shadowjoin':
        	if status == 'bangun':
        		ws.send(lsjoin)
        		print("ini courr 10")
        	#taplove
        if evn == 'live_like':
        	if status == 'bangun':
        		ws.send(llike)
        	
        	#spam masih error
        if evn == 'live_message' and psn == 'jing anti spam on' and spamn == 'false' and tag in iduser:
        	spamn = 'true'
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Siap yang Spam Jing bakalan kick Otomatis"}')
        	#spam babik
        if spamn == 'true':
        	spam += 1
        	print("kick : ",spam)
        	print(uid)
        	if id == false:
        		spam = 0
        	elif uid == true:
        		if  spam > 35:
        			print("Yang mau di kick : ",uid)
        			paramex = {'cv':'heimdallr'}
        			headers1 = {'Authorization':'Token ' + tokens,
        			'content-type':'application/json','accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        			korbankick = {'block_user_id':uid}
        			rlvp = requests.post('https://id-api.spooncast.net/lives/'+ slink + '/block/',headers=headers1,json=korbankick,params=paramex)
        			spam = 0
        		#spam off
        if evn == 'live_message' and psn == 'jing anti spam off' and spamn == 'true' and tag in iduser:
        	spamn = 'false'
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Anti spam di matikan"}')
        	#nub on
        if evn == 'live_message' and psn == 'jing anti nub on' and nub == 'false' and tag in iduser:
        	nub = 'true'
        	ws.send('{"appversion":"4.3.16","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Yang Nub bakalan di kick otomatis"}')
        if nub == 'true':
        	nub = ["❤❤❤❤","❤❤❤❤❤"]
        	for x in nub:
        		cht = x
        		print(uid,cht)
        		paramex = {'cv':'heimdallr'}
        		headers1 = {'Authorization':'Token ' + tokens,
        		'content-type':'application/json','accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		korbankick = {'block_user_id':uid}
        		rlvp = requests.post('https://id-api.spooncast.net/lives/'+ slink + '/block/',headers=headers1,json=korbankick,params=paramex)
        		print(i+1,'User dengan id = ',uid)
        	#nub off
        if evn == 'live_message' and psn == 'jing anti nub off' and nub == 'true' and tag in iduser:
        	nub = 'false'
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Anti Nub di matikan"}')
        	#bing aktif 
        if evn == 'live_message'  and psn == 'jing istirahat' and status == 'bangun' and nurut == 'off':
        	status = 'tidur'
        	ws.send(tidur)
        	#aktif rank
        if evn == 'live_message' and psn == '=rank' and nurut == 'off':
        	headers3 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla (Linux; Android 8.0.0; SM-G930F Build/R16NW; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/74.0.3729.157 Mobile Safari/537.36'}
        	response3 = requests.get('https://id-api.spooncast.net/lives/popular/', headers=headers3)
        	ws.send(rank)
        	#cek rank
        if evn == 'live_message' and psn[:5] == '=rank' and nurut == 'off':
        	zz = psn[6:]
        	xz = int(zz) - 1
        	tanggal = datetime.today()
        	nama = response3.json()['results'][xz]['author']['nickname']
        	judul = response3.json()['results'][xz]['title']
        	created = response3.json()['results'][int(xz)]['created']
        	cre = created[:-17]
        	crea = created[11:-8]
        	creat = cre + ' ' + crea
        	creatdt = datetime.strptime(creat, '%Y-%m-%d %H:%M:%S')
        	selisih = tanggal - creatdt
        	s1 = '07:00:00'
        	s2 = str(selisih)[:-7]
        	formatss = '%H:%M:%S'
        	timeh = datetime.strptime(s2, formatss) - datetime.strptime(s1, formatss)
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Info rank : ' + str(xz + 1) + '\\\\nnama: ' + nama + '\\\\njudul: ' + judul + '\\\\ndurasi -> ' + str(timeh) + ' "}')
        	#bing nurut
        if evn == 'live_message' and psn == 'jing nurut' and nurut == "off":
        	nurut = "on"
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Siap Jing Laksanakan☺️"}')
        #aktif kan waktu
        if evn == 'live_message' and psn == 'jing waktu on' and spamn == 'false' and tag in iduser:
        	aktif = 'on'
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Waktu Telah Diaktifkan !!"}')
        #nonaktif waktu
        if evn == 'live_message' and psn == 'jing waktu off' and aktif == 'on' and tag in iduser:
        	aktif = 'off'
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Waktu Telah nonaktifkan !!"}')
        #waktu telah aktif
        if aktif == 'on':
        	waktu += 1
        	print("Waktu : ",waktu)
        	if waktu > 30:
        		cid = ['jakarta','bali','maluku','korea','amerika','bandung','surabaya','china']
        		cari = random.choice(cid)
        		reqlist = requests.get('https://time.siswadi.com/timezone/'+cari)
        		wakti= reqlist.json()['location']['address']
        		waktuu= reqlist.json()['time']['time']
        		print(waktuu)
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Waktu Otomatis]\\\\nJam : '+str(waktuu)+'\\\\naddress : '+str(wakti)+'"}')
        		waktu = 0
        	
        	#cek akun
        if evn == 'live_message' and psn == '=me' and nurut == 'off':
        	print('sjqjajsajajhshsajsjjsjwjwa')
        	cid = tag
        	headers4 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        	response4 = requests.get(('https://id-api.spooncast.net/search/user/?keyword=' + cid + ''), headers=headers4)
        	idd = response4.json()['results'][0]['id']
        	headers5 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        	response5 = requests.get(('https://id-api.spooncast.net/users/' + str(idd) + '/notice/'), headers=headers5)
        	nn = response5.json()['results'][0]['bj']['nickname']
        	tg = str(response5.json()['results'][0]['bj']['date_joined'])
        	tan = tg[:-17]
        	tang = tg[11:-8]
        	tangg = tan + ' ' + tang
        	tangga = datetime.strptime(tangg, '%Y-%m-%d %H:%M:%S')
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Cek Akun]\\\\nInfo username ' + nn + ' \ntanggal akun dibuat -> ' + str(tangga) + ' GMT +0 "}')
        #cek akun orang
        if evn == 'live_message' and psn[:4] == '=cek' and nurut == 'off':
        	print('sjqjajsajajhshsajsjjsjwjwa')
        	cid = psn[5:]
        	headers4 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla (Linux; Android 8.0.0; SM-G930F Build/R16NW; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/74.0.3729.157 Mobile Safari/537.36'}
        	response4 = requests.get(('https://id-api.spooncast.net/search/user/?keyword=' + cid + ''), headers=headers4)
        	idd = response4.json()['results'][0]['id']
        	headers5 = {'User-Agent': 'Mozilla/5.0'}
        	response5 = requests.get(('https://id-api.spooncast.net/users/' + str(idd) + '/notice/'), headers=headers5)
        	nn = response5.json()['results'][0]['bj']['nickname']
        	tg = str(response5.json()['results'][0]['bj']['date_joined'])
        	tan = tg[:-17]
        	tang = tg[11:-8]
        	tangg = tan + ' ' + tang
        	tangga = datetime.strptime(tangg, '%Y-%m-%d %H:%M:%S')
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Cek Akun]\\\\nInfo username : ' + nn + '\\\\ntanggal akun dibuat : ' + str(tangga) + '"}')
        	#sayang panggilan
        if evn == 'live_message' and psn == 'maki':
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"NOTED:\n JADI ORANG YANG MEMILIKI PRINSIP JANGAN HANYA OMONGKOSONG!!"}')
        if evn == 'live_message' and psn == 'zal':
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"NOTED:\n JANGAN SUKA MERENDAH KAN ORANG LAIN KARNA ANDA LEBIH RENDAH!"}')
        if evn == 'live_message' and psn == 'hi':
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"HI JUGA AKA ' + nick + ' SEMOGA NYAMAN DENGAN LAGU YANG SAYA PUTARKAN😊🙏"}')
        if evn == 'live_message' and psn == 'hallo':
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"HALLO JUGA AKA ' + nick + ' JANGAN LUPA TAP KADO DI POJOK KANAN BAWAH 😊"}')
        if evn == 'live_message' and psn == 'hay':
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"HAI JUGA AKA ' + nick + ' STAY ENJOY YA DENGAN PLAYLIST ME🙏"}')
        if evn == 'live_message' and psn == 'ilu':
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"NOTED:\n JANGAN LAH MERENDAHKAN IQ ORANG LAIN APABILA KALIAN TIDAK TAU REALNYA!!"}')
        	#bing suruh kerja
        if evn == 'live_message' and psn == 'jing kerja' and status == 'tidur' and nurut == 'off':
        	status = 'bangun'
        	ws.send(bangun)
        if evn == 'live_message' and psn == 'Makasih':
        	ws.send(makasih)
        #bing panggilan
        if evn == 'live_message' and psn == 'jing' and nurut == 'off':
        	ws.send(ping)
        #ip
        if evn == 'live_message' and psn == '=ip' and nurut == 'off':
        	ip = chat['client_ip']
        	response9 = requests.get('http://ip-api.com/json/' + ip)
        	req = response9.json()
        	ippp = req['query']
        	cityy = req['city']
        	zona = req['timezone']
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Username : '+nick+'\\\\nInfo Ip : '+ip+'\\\\nKota   : ' + cityy + ' "}')
        #cari ip
        if evn == 'live_message' and psn[:5] == '=cari' and nurut == 'off':
        	cid = psn[6:]
        	if tag == cid:
        		ip = chat['client_ip']
        		response9 = requests.get('http://ip-api.com/json/' + ip)
        		req = response9.json()
        		ippp = req['query']
        		cityy = req['city']
        		zona = req['timezone']
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Username : '+nick+'\\\\nInfo Ip : '+ip+'\\\\nKota   : ' + cityy + ' "}')
        
        	#corona
        if evn == 'live_message' and psn[:7] == '=corona' and nurut == 'off':
        	cid = psn[8:]
        	reqlist = requests.get('https://api.kawalcorona.com/indonesia/provinsi').json()
        	for x in reqlist:
        		a = re.search(cid,x['attributes']['Provinsi'].lower())
        		if a!=None:
        			ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"'+x['attributes']['Provinsi']+'\\\\nterdeteksi \t: ' + str(x['attributes']['Kasus_Posi']) + '\\\\nmati \t : ' + str(x['attributes']['Kasus_Meni'])+ '\\\\nsembuh \t : '+ str(x['attributes']['Kasus_Semb']) +'"}')
        #jam
        if evn == 'live_message' and psn[:4] == '=jam' and nurut == 'off':
        	cid = psn[5:]
        	reqlist = requests.get('https://time.siswadi.com/timezone/'+cid)
        	waktu = reqlist.json()['time']['date']
        	b = reqlist.json()['time']['time']
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Info Waktu dan tanggal]\\\\nAddres : '+ cid +'\\\\nJam : '+str(waktu)+'\\\\nTanggal : '+str(b)+'"}')
        #cek dollar
        if evn == 'live_message' and psn[:5] == '=bank' and nurut == 'off':
        	cid = psn[6:]
        	reqlist = requests.get('http://kurs.web.id/api/v1/'+cid)
        	x = reqlist.json()['bank']
        	y = reqlist.json()['matauang']
        	t = reqlist.json()['jual']
        	b = reqlist.json()['beli']
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Info Dollar]\\\\nBank : '+str(x)+'\\\\nMata Uang : '+str(y)+'\\\\nBeli : '+str(b)+'\\\\nJual : '+str(t)+'"}')
        	#jawab salam
        if evn == 'live_message' and psn.lower() == 'assalamualaikum':
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Waalaikumsalam Wr. Wb.🙏"}')
        #tiru typing org
        if evn == 'live_message' and psn[:5] == '=tiru' and nurut == 'off' and tiru == 'false':
        	tiru = 'true'
        	cid=psn[6:]
        	if tirun!=4:
        		tiruu.insert(0,cid)
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Oke Jing Tiru"}')
        		tirun+=1
        	else:
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Kebanyakan Tuan Jing Pusing🙂"}')
        	#off tiru
        if evn == 'live_message' and psn == '=tiru mati' and nurut == 'on' and tiru == 'true':
        	tiru = 'false'
        	tiruu[:]
        	tirun=0
        	tiruu=[]
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Oke Jing Selesai Niru😶"}')
        if tiru == 'true':
        	if tag in tiruu:
        		print(cht) 
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"'+cht+'"}')
        	
        	#caculator
        if evn == 'live_message' and psn[:1] == '=' and nurut == 'off':
        	has1 = psn[1:]
	        has2 = str(eval(has1))
	        ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Hasil ' +has1+' = ' +has2+'"}')
	    
        	 
        
        	
        ###### nurut #####
        if nurut == 'on':#panggilan
        	if evn == 'live_message' and psn == 'jing' and tag in iduser:
        		ws.send(ping)
        	if evn == 'live_message' and psn == 'jing kerja' and tag in iduser and status == 'tidur' :#kerja
        		status = 'bangun'
        		ws.send(bangun)
        	if evn == 'live_message'  and psn == 'jing istirahat' and tag in iduser and status == 'bangun':#istirahat
        		status = 'tidur'
        		ws.send(tidur)
        	if evn == 'live_message' and psn == '=ip' and tag in iduser:
        		ip = chat['client_ip']
        		response9 = requests.get('http://ip-api.com/json/' + ip)
        		req = response9.json()
        		ippp = req['query']
        		cityy = req['city']
        		zona = req['timezone']
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Username : '+nick+'\\\\nInfo Ip : '+ip+'\\\\nKota   : ' + cityy + ' "}')
        		#bing bebas
        	if evn == 'live_message' and psn == 'jing bebas' and tag in iduser and nurut == 'on':
        		nurut = "off"
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Siap Jing Ikutin Tuan😊"}')
        	#bing ketawak otomatis nurut
        	if evn == 'live_message' and psn[:1].lower() == 'w' and psn[-1:] == 'k' and tag in iduser:
        		babik = random.choice(listjawab)
        		print(babik)
        		ws.send(babik)
        	if evn == 'live_message' and psn == '=rank' and tag in iduser:
        		headers3 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla (Linux; Android 8.0.0; SM-G930F Build/R16NW; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/74.0.3729.157 Mobile Safari/537.36'}
        		response3 = requests.get('https://id-api.spooncast.net/lives/popular/', headers=headers3)
        		ws.send(rank)
        	#bing liat rank versi nurut
        	if evn == 'live_message' and psn[:5] == '=rank' and tag in iduser:
        		zz = psn[6:]
        		xz = int(zz) - 1
        		tanggal = datetime.today()
        		nama = response3.json()['results'][xz]['author']['nickname']
        		judul = response3.json()['results'][xz]['title']
        		created = response3.json()['results'][int(xz)]['created']
        		cre = created[:-17]
        		crea = created[11:-8]
        		creat = cre + ' ' + crea
        		creatdt = datetime.strptime(creat, '%Y-%m-%d %H:%M:%S')
        		selisih = tanggal - creatdt
        		s1 = '07:00:00'
        		s2 = str(selisih)[:-7]
        		formatss = '%H:%M:%S'
        		timeh = datetime.strptime(s2, formatss) - datetime.strptime(s1, formatss)
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Info rank : ' + str(xz + 1) + '\\\\nnama: ' + nama + '\\\\njudul: ' + judul + '\\\\ndurasi : ' + str(timeh) + ' "}')
        		# top fan versi nurut
        	if evn == 'live_message' and psn == '=top fan' and tag in iduser:
        		headers2 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response2 = requests.get('https://id-api.spooncast.net/ranks/fan/',headers=headers2)
        		ws.send(topfan)
        	### cek top versi nurut
        	if evn == 'live_message' and psn[:-2] == '=top fan' and tag in iduser:
        		headers2 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response2 = requests.get('https://id-api.spooncast.net/ranks/fan/',headers=headers2)
        		zz = psn[5:]
        		xz = int(zz) - 1
        		tangga = datetime.today()
        		nic = response2.json()['results'][xz]['author']['nickname']
        		coin = response2.json()['results'][xz]['score']
        		ws.send('{"appversion":"4.3.16","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Top Fan]\\\\nInfo username : ' + str(nic) + '\\\\ncoin di sawer [' + str(coin) + ']"}')
        		#top dj versi nurut
        	if evn == 'live_message' and psn == '=top dj' and tag in iduser:
        		headers9 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response9 = requests.get('https://id-api.spooncast.net/ranks/livebj/',headers=headers9)
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Top Dj telah di update"}')
        		#cek top dj versi nurut
        	if evn == 'live_message' and psn[:-2] == '=top dj' and tag in iduser:
        		headers9 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response9 = requests.get('https://id-api.spooncast.net/ranks/livebj/',headers=headers9)
        		zz = psn[4:]
        		xz = int(zz) - 1
        		tangga = datetime.today()
        		nic = response9.json()['results'][xz]['author']['nickname']
        		coin = response9.json()['results'][xz]['score']
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Top Dj]\\\\nInfo username [' + str(nic) + ']' + '\\\\ncoin yang di sawer di live [' + str(coin) + ']"}')
        		# cek durasi versi nurut
        	if evn == 'live_message' and (psn == '=status' or psn == '=durasi' or psn == '=info') and tag in iduser:
        		headers2 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response2 = requests.get(('https://id-api.spooncast.net/lives/' + slink + ''), headers=headers2)
        		createdl = response2.json()['results'][0]['created']
        		tanggal = datetime.today()
        		cre = createdl[:-17]
        		crea = createdl[11:-8]
        		creat = cre + ' ' + crea
        		creatdt = datetime.strptime(creat, '%Y-%m-%d %H:%M:%S')
        		selisih = tanggal - creatdt
        		s1 = '07:00:00'
        		s2 = str(selisih)[:-7]
        		formatss = '%H:%M:%S'
        		timehl2 = datetime.strptime(s2, formatss) - datetime.strptime(s1, formatss)
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"room sudah online selama: '+ str(timehl2) + '\\\\nMax live: 02:00:00 "}')
        		#cek akun versi nurut
        	if evn == 'live_message' and psn == '=me' and tag in iduser:
        		print('sjqjajsajajhshsajsjjsjwjwa')
        		cid = tag
        		headers4 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response4 = requests.get(('https://id-api.spooncast.net/search/user/?keyword=' + cid + ''), headers=headers4)
        		idd = response4.json()['results'][0]['id']
        		headers5 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response5 = requests.get(('https://id-api.spooncast.net/users/' + str(idd) + '/notice/'), headers=headers5)
        		nn = response5.json()['results'][0]['bj']['nickname']
        		tg = str(response5.json()['results'][0]['bj']['date_joined'])
        		tan = tg[:-17]
        		tang = tg[11:-8]
        		tangg = tan + ' ' + tang
        		tangga = datetime.strptime(tangg, '%Y-%m-%d %H:%M:%S')
        		ws.send('{"appversion":"4.3.16","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Cek Akun]\\\\nInfo username ' + nn + ' \\\\ntanggal akun dibuat -> ' + str(tangga) + ' GMT +0 "}')
        	#Cek akun org versi nurut
        	if evn == 'live_message' and psn[:4] == '=cek' and tag in iduser:
        		print('sjqjajsajajhshsajsjjsjwjwa')
        		cid = psn[5:]
        		headers4 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla	 (Linux; Android 8.0.0; SM-G930F Build/R16NW; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/74.0.3729.157 Mobile Safari/537.36'}
        		response4 = requests.get(('https://id-api.spooncast.net/search/user/?keyword=' + cid + ''), headers=headers4)
        		idd = response4.json()['results'][0]['id']
        		headers5 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response5 = requests.get(('https://id-api.spooncast.net/users/' + str(idd) + '/notice/'), headers=headers5)
        		nn = response5.json()['results'][0]['bj']['nickname']
        		tg = str(response5.json()['results'][0]['bj']['date_joined'])
        		tan = tg[:-17]
        		tang = tg[11:-8]
        		tangg = tan + ' ' + tang
        		tangga = datetime.strptime(tangg, '%Y-%m-%d %H:%M:%S')
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Cek Akun]\\\\nInfo username : ' + nn + '\\\\ntanggal akun dibuat : ' + str(tangga) + '"}')
        	if evn == 'live_message' and psn[:1].lower() == 'j' and psn[-1:] == '?' and tag in iduser:
        		kambeng = random.choice(listjawaban)
        		print(kambeng)
        		ws.send(kambeng)
        		#corona versi nurut
        	if evn == 'live_message' and psn[:7] == '=corona' and tag in iduser:
        		cid = psn[8:]
        		reqlist = requests.get('https://api.kawalcorona.com/indonesia/provinsi').json()
        		for x in reqlist:
        			a = re.search(cid,x['attributes']['Provinsi'].lower())
        			if a!=None:
        				ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"'+x['attributes']['Provinsi']+'\\\\nterdeteksi \t: ' + str(x['attributes']['Kasus_Posi']) + '\\\\nmati \t : ' + str(x['attributes']['Kasus_Meni'])+ '\\\\nsembuh \t : '+ str(x['attributes']['Kasus_Semb']) +'"}')
        	#jam versi nurut
        	if evn == 'live_message' and psn[:4] == '=jam' and tag in userid:
        		cid = psn[5:]
        		reqlist = requests.get('https://time.siswadi.com/timezone/'+cid)
        		waktu = reqlist.json()['time']['date']
        		b = reqlist.json()['time']['time']
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"[Info Waktu dan tanggal]\\\\nAddres : '+ cid +'\\\\nJam : '+str(waktu)+'\\\\nTanggal : '+str(b)+'"}')
        		#caculator nurut
        	if evn == 'live_message' and psn[:1] == '=' and tag in iduser:
        		has1 = psn[1:]
        		has2 = str(eval(has1))
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"","useragent":"Android","message":"Hasil ' +has1+' = ' +has2+'"}')
	        
        	
        	
        	######## nurut #######
        	
        	
        
        #bing suruh tap
        if evn == 'live_message' and psn == 'jing tap lah' and tag in iduser:
        	headers = {'Authorization':'Token 0057504cf1cf33ea19d96e4692088b0c3f08ec4d','accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        	r1 = requests.post('https://id-api.spooncast.net/lives/'+slink+'/like/',headers=headers)
        	print(r1.status_code)
        #kick satu
        if evn == 'live_message' and psn[:4] == '=usir' and tag in iduser:
        	print('sjqjajsajajhshsajsjjsjwjwa')
        	cid = psn[5:]
        	headers4 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla (Linux; Android 8.0.0; SM-G930F Build/R16NW; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/74.0.3729.157 Mobile Safari/537.36'}
        	response4 = requests.get(('https://id-api.spooncast.net/search/user/?keyword=' + cid + ''), headers=headers4)
        	idd = response4.json()['results'][0]['id']
        	nickk = response4.json()['results'][0]['nickname']
        	paramex = {'cv':'heimdallr'}
        	headers1 = {'Authorization':'Token ' + tokens,
        	'content-type':'application/json','accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        	korbankick = {'block_user_id':str(idd)}
        	rlvp = requests.post('https://id-api.spooncast.net/lives/'+ slink + '/block/',headers=headers1,json=korbankick,params=paramex)
        	print(i+1,'User dengan id = ',str(idkorban[i]))
        	ws.send('{"appversion":"4.3.16","event":"live_message","token":"","useragent":"Android","message":"'+str(nickk)+' Di Suruh Minggat guys"}')
        	#add dalam list
        if evn == 'live_message' and psn[:4].lower()=='=req':
        	print("sjqjajsajajhshsajsjjsjwjwa")
        	cid=psn[5:]
        	#listlagu.append(cid)
        	if lagucountr!=4:
        		listlagu.insert(0,cid)
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Lagu '+cid+' List Telah di masukan 😄"}')
        		lagucountr+=1
        	else:
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Lagu '+cid+' Gagal MenambahKan List Penuh"}')
        	#lihat list
        if evn == 'live_message' and psn[:5].lower()=='=list':
        	print("1616161616166161sjwjwa")
        	acclagu=""
        	templagu=""
        	temp=[1,2,3,4]
        	zz=4
        	for x in temp:
        		if listlagu[zz-x]!="lagu":
        			templagu = r'\\n'+'- '+listlagu[zz-x]
        			acclagu+=templagu
        			print(listlagu)
        			print(templagu)
        	ws.send(r'{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"LIST LAGU: '+acclagu+'"}')
        	
        #reset list	
        if evn == 'live_message' and psn.lower() =='=reset list' and tag in iduser:
        	print("161616161sjwjwa")
        	listlagu[:]
        	lagucountr=0
        	listlagu=["lagu","lagu","lagu","lagu"]
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"List Berhasil Di Reset"}')
        	#cari orang dalam.nurut
        if evn == 'live_message' and psn[:1] =='@' and tag in iduser:
        	print("sjqjajsajajhshsajsjjsjwjwa")
        	cid=psn[1:]
        	#listlagu.append(cid)
        	if courid!=100:
        		iduser.insert(0,cid)
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Terdaftar sebagai Tuan Jing😊"}')
        		courid+=1
        	else:
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Tuan Jing penuh 🤣"}')
        		#reset org dalam.nurut
        if evn == 'live_message' and psn.lower() =='clear' and tag in iduser:
        	print("161616161sjwjwa")
        	iduser[:]
        	coutr=0
        	iduser=["zalyour_bae.","rannisa","king.sif","gosahsokaplau.","redbloods",]
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Ahh.. Jing cari tuan baru lah 😭"}')
        	#kick massal
        if evn == 'live_message' and psn[:5] == '=kick' and tag in iduser:
        	print('sjqjajsajajhshsajsjjsjwjwa')
        	cid = psn[5:]
        	headers4 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla (Linux; Android 8.0.0; SM-G930F Build/R16NW; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/74.0.3729.157 Mobile Safari/537.36'}
        	response4 = requests.get(('https://id-api.spooncast.net/search/user/?keyword=' + cid + ''), headers=headers4)
        	paramex = {'cv':'heimdallr'}
        	headers1 = {'Authorization':'Token ' + tokens,
        	'content-type':'application/json','accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        	r3 = response4
        	data3 = r3.json()
        	results_data = data3['results']
        	for i in range(len(results_data)):
        		korbankick = {'block_user_id':results_data[i]['id']}
        		rlvp = requests.post('https://id-api.spooncast.net/lives/'+ slink + '/block/',headers=headers1,json=korbankick,params=paramex)
        		print("User Yang Telah di Kick : " + results_data[i]['nickname'])
        		#bing out
        if evn == 'live_message' and psn == 'jing masuk kandang' and tag in iduser:
        	ws.send('{"appversion":"4.3.22","event":"live_message","token":"","useragent":"Android","message":"'+nick+' Siap Tuan Jings Ku😗😗"}')
        	ws.close()
        			#bing up room 100
        if evn == 'live_message' and tag in iduser:
        	if psn == 'jing anti tarik on':
        		ws.send(jmbttt)
        		anti()
        #uproom 100
        if evn == 'live_message' and tag in iduser:
        	if psn[:12] == 'jing up room':
        		cid = psn[13:]
        		if cid == '100':
        			xp = range(0,100)
        		elif cid == '200':
        			xp = range(100,200)
        		elif cid == '300':
        			xp = range(200,300)
        		elif cid == '400':
        			xp = range(300,400)
        		elif cid == '500':
        			xp = range(400,500)
        		elif cid == '600':
        			xp = range(500,600)
        		elif cid == '700':
        			xp = range(600,700)
        		elif cid == '800':
        			xp = range(700,800)
        		elif cid == '900':
        			xp = range(800,900)
        		elif cid == '1000':
        			xp = range(900,1000)
        		elif cid == '1100':
        			xp = range(1000,1100)
        		elif cid == '1200':
        			xp = range(1100,1200)
        		elif cid == '1300':
        			xp = range(1200,1300)
        		ws.send(uproom)
        		for a in xp:
        			headers2={'Authorization':'Token '+ str(token[a]),'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        			response = requests.post('http://id-api.spooncast.net/lives/'+slink+'/join/',headers=headers2)
        			response = requests.post('http://id-api.spooncast.net/lives/'+slink+'/like/',headers=headers2)
        			if response.status_code == 200:
        				print("Bot ke berhasil")
        			elif response.status_code == 403:
        				os.system('clear')
        				print("server sedang sibuk, tunggu 6 menit")
        				time.sleep(360)
        			elif response.status_code == 401:
        				print("gagal token", str(token[a]))
        			elif response.status_code == 404:
        				print("bot ke "+str(i)+" gagal")
        			else:
        				ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Proces selesai Dilaksanakan 🤭"}')
        		#####report#####
        if evn == 'live_message' and tag in iduser:
        	if psn[:11] == 'rank report':
        		headers2 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response2 = requests.get('https://id-api.spooncast.net/lives/popular/',headers=headers2)
        		zz = psn[12:]
        		xz = int(zz) - 1
        		idk = response2.json()['results'][xz]['id']
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Oke Jing Report Dia..."}')
        		for a in range(200,300):
        			headers={'Authorization':'Token '+ str(token[a]),'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        			response0 = requests.post('http://id-api.spooncast.net/lives/'+str(idk)+'/join/', headers=headers)
        			response = requests.post('http://id-api.spooncast.net/lives/'+str(idk)+'/report/', headers=headers,json={'report_type':'2'})
        			response = requests.post('http://id-api.spooncast.net/lives/'+str(idk)+'/leave/', headers=headers)
        			if response.status_code == 200:
        				print("Bot ke berhasil")
        			elif response.status_code == 403:
        				os.system('clear')
        				print("server sedang sibuk, tunggu 6 menit")
        				time.sleep(360)
        			elif response.status_code == 401:
        				print("gagal token", str(token[a]))
        #####unlock#####
        if evn == 'live_message' and tag in iduser:
        	if psn[:11] == 'rank unlock':
        		headers2 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response2 = requests.get('https://id-api.spooncast.net/lives/popular/',headers=headers2)
        		zz = psn[12:]
        		xz = int(zz) - 1
        		idk = response2.json()['results'][xz]['author']['id']
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Oke Jing unlock room nya"}')
        		for a in range(300,600):
        			headers={'Authorization':'Token '+ str(token[a]),'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        			response = requests.post('http://id-api.spooncast.net/users/'+str(idk)+'/unblock/', headers=headers)
        			if response.status_code == 200:
        				print("Bot ke berhasil")
        			elif response.status_code == 403:
        				os.system('clear')
        				print("server sedang sibuk, tunggu 6 menit")
        				time.sleep(360)
        			elif response.status_code == 401:
        				print("gagal token", str(token[a]))
        			
        	####lock#####
        if evn == 'live_message' and tag in iduser:
        	if psn[:9] == 'rank lock':
        		headers2 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response2 = requests.get('https://id-api.spooncast.net/lives/popular/',headers=headers2)
        		zz = psn[10:]
        		xz = int(zz) - 1
        		idk = response2.json()['results'][xz]['author']['id']
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Oke Jing lock room nya..."}')
        		for a in range(200,400):
        			headers={'Authorization':'Token '+ str(token[a]),'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        			response = requests.post('http://id-api.spooncast.net/users/'+str(idk)+'/block/', headers=headers)
        			if response.status_code == 200:
        				print("Bot ke berhasil")
        			elif response.status_code == 403:
        				os.system('clear')
        				print("server sedang sibuk, tunggu 6 menit")
        				time.sleep(360)
        			elif response.status_code == 401:
        				print("gagal token", str(token[a]))
        #rank out
        if evn == 'live_message' and tag in iduser:
        	if psn[:8] == 'rank out':
        		headers2 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        		response11 = requests.get('https://id-api.spooncast.net/lives/popular/',headers=headers2)
        		zz = psn[9:]
        		xz = int(zz) - 1
        		id = response11.json()['results'][xz]['id']
        		nickk = response11.json()['results'][xz]['author']['nickname']
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Room : '+str(nickk)+'\\\\n Id room : '+str(id)+'\\\\nOke Jing Keluarin Para Setannya..."}')
        		for a in range(0,1300):
        			headers={'Authorization':'Token '+ str(token[a]),'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        			response = requests.post('http://id-api.spooncast.net/lives/'+str(id)+'/leave/', headers=headers)
        			if response.status_code == 200:
        				print("Bot berhasil")
        			elif response.status_code == 403:
        				os.system('clear')
        				print("server sedang sibuk, tunggu 6 menit")
        				time.sleep(360)
        			elif response.status_code == 401:
        				print("gagal token", str(token[a]))
          #bing keluar kan bot      	
        if evn == 'live_message' and tag in iduser:
        	if psn[:12] == 'jing out bot':
        		cid = psn[13:]
        		if cid == '100':
        			xp = range(0,100)
        		elif cid == '200':
        			xp = range(100,200)
        		elif cid == '300':
        			xp = range(200,300)
        		elif cid == '400':
        			xp = range(300,400)
        		elif cid == '500':
        			xp = range(400,500)
        		elif cid == '600':
        			xp = range(500,600)
        		elif cid == '700':
        			xp = range(600,700)
        		elif cid == '800':
        			xp = range(700,800)
        		elif cid == '900':
        			xp = range(800,900)
        		elif cid == '1000':
        			xp = range(900,1000)
        		elif cid == '1100':
        			xp = range(1000,1100)
        		elif cid == '1200':
        			xp = range(1100,1200)
        		elif cid == '1300':
        			xp = range(1200,1300)
        		ws.send('{"appversion":"4.3.22","event":"live_message","token":"'+tokens+'","useragent":"Android","message":"Oke Jing Selesai keluar Setanya ....."}')
        		for a in xp:
        			headers2= {'Authorization':'Token '+ str(token[a]),'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
        	"origin":"https://www.spooncast.net",
        	"referer":"https://www.spooncast.net/",
        	'content-type':'application/json',
        	'User-Agent':'AppleWebKit/537.36 Mozilla'}
        			response = requests.post('http://id-api.spooncast.net/lives/'+slink+'/leave/',headers=headers2)
        			if response.status_code == 200:
        				print("Bot ke berhasil")
        			elif response.status_code == 403:
        				os.system('clear')
        				print("server sedang sibuk, tunggu 6 menit")
        				time.sleep(360)
        			elif response.status_code == 401:
        				print("gagal token", str(token[a]))
        			elif response.status_code == 404:
        				print("bot ke gagal")
        
def on_close(ws): 
    print ("### closed ###")
    
def on_open(ws):
	ws.send(mypesan)
	foo()


if __name__ == "__main__":
	nomor= "082284850571"
	password= "qwerty123"
	headers99 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
	"origin":"https://www.spooncast.net",
	"referer":"https://www.spooncast.net/",
	'content-type':'application/json',
	'User-Agent':'AppleWebKit/537.36 Mozilla'}
	response=requests.post('https://id-api.spooncast.net/signin/?version=2',headers=headers99,json={"sns_type":"phone","sns_id":nomor,"password":password})
	#print(response.json())
	rscode = response.json()['results'][0]['result_code']
	if rscode !=1:
		print("nomor atau password salah , ulangi lagi")
	print("berhasil login")
	tirublock=response.json()['results'][0]
	#time.sleep(100)
	tokenp =response.json()['results'][0]['token']
	print(response.json()['results'][0]['nickname'])
	tagi = str(response.json()['results'][0]['id'])
	userid=tagi
	print(userid)
	etid = str(response.json()['results'][0])
	tokens = tokenp
	txtid = input("masukkan link spoon: ")
	headers={'User-Agent':'Mozilla/5.0','accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3'}
	response = requests.get(txtid)
	url = response.url
	slink = url[34:-59]
	headers8 = {'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
	"origin":"https://www.spooncast.net",
	"referer":"https://www.spooncast.net/",
	'content-type':'application/json',
	'User-Agent':'AppleWebKit/537.36 Mozilla'}
	response2 = requests.get('https://id-api.spooncast.net/lives/'+slink,headers=headers8)
	
	headers={'Authorization':'Token '+tokens,
	'accept':'text/htmlapplication/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
	"origin":"https://www.spooncast.net",
	"referer":"https://www.spooncast.net/",
	'content-type':'application/json',
	'User-Agent':'AppleWebKit/537.36 Mozilla'}

	mypesan = '{"live_id":'+slink+',"token":"'+tokens+'","event":"live_join","appversion":"4.3.22","useragent":"Android","type":"live_req"}'
	headers10={'User-Agent':'Spoon/4.3.22(203) Dalvik/2.1.0 (Linux; U; Android 9; Redmi 4X Build/PQ2A.190305.002'}
	r = requests.get('https://id-api.spooncast.net/lives/'+slink+'/',headers=headers10)
	id = r.json()['results'][0]['author']
	iduser.insert(0,str(id))
	websocket.enableTrace(True)
	ws = websocket.WebSocketApp("wss://id-heimdallr.spooncast.net/"+slink,
	on_message = on_message,
	on_close = on_close)
	ws.on_open = on_open
	ws.run_forever()
